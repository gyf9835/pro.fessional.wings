# sql类型，当前只支持"mysql"
wings.faceless.flywave.sql.dialect=mysql

# 原始分隔符，必须存在，默认";"。
wings.faceless.flywave.sql.delimiter-default=;
# 重定义的分隔符的命令，默认"DELIMITER"
wings.faceless.flywave.sql.delimiter-command=DELIMITER
# 单行注释，默认 "--"
wings.faceless.flywave.sql.comment-single=--
# 多行注释，开头和结束以空格分开表示，默认"/*   */"
wings.faceless.flywave.sql.comment-multiple=/*   */

#####################################

wings.faceless.flywave.ver.schema-version-table=sys_schema_version
wings.faceless.flywave.ver.schema-journal-table=sys_schema_journal

wings.faceless.flywave.ver.ask-mark=true
wings.faceless.flywave.ver.ask-undo=true
wings.faceless.flywave.ver.ask-drop=true
# drop 语句的正则
wings.faceless.flywave.ver.drop-reg[0]=^drop\\s+table
wings.faceless.flywave.ver.drop-reg[1]=^truncate\\s+table

# #### 数据版本跟踪 ######
# `{{PLAIN_NAME}}` 目标表的`本表`名字
# `{{TABLE_NAME}}` 目标表名字，可能是本表，分表，跟踪表
# `{{TABLE_BONE}}` 目标表字段(至少包含名字，类型，注释)，不含索引和约束
# `{{TABLE_PKEY}}` 目标表的主键中字段名，用来创建原主键的普通索引。
# ######################
#before update trigger，独自跟踪表，不需要增加原主键索引
wings.faceless.flywave.ver.journal-update=\
CREATE TABLE `{{TABLE_NAME}}$upd` ( \n\
    `_id` INT(11) NOT NULL AUTO_INCREMENT, \n\
    `_dt` DATETIME(3) DEFAULT NULL, \n\
    {{TABLE_BONE}}, \n\
    PRIMARY KEY (`_id`) \n\
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4

wings.faceless.flywave.ver.trigger-update=\
CREATE TRIGGER `{{TABLE_NAME}}$bu` BEFORE UPDATE ON `{{TABLE_NAME}}` \n\
FOR EACH ROW BEGIN \n\
    INSERT INTO `{{TABLE_NAME}}$upd` SELECT NULL, NOW(3), t.* FROM `{{TABLE_NAME}}` t \n\
    WHERE id= OLD.id ; \n\
END

#before delete trigger，共用跟踪表，建立原主键索引
wings.faceless.flywave.ver.journal-delete=\
CREATE TABLE `{{PLAIN_NAME}}$del` ( \n\
     `_id` INT(11) NOT NULL AUTO_INCREMENT, \n\
     `_dt` DATETIME(3) DEFAULT NULL, \n\
     {{TABLE_BONE}}, \n\
     PRIMARY KEY (`_id`), \n\
     KEY `PLAIN_PK` ({{TABLE_PKEY}}) \n\
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4

wings.faceless.flywave.ver.trigger-delete=\
CREATE TRIGGER `{{TABLE_NAME}}$bd` BEFORE DELETE ON `{{TABLE_NAME}}` \n\
FOR EACH ROW BEGIN \n\
    INSERT INTO `{{PLAIN_NAME}}$del` SELECT NULL, NOW(3), t.* FROM `{{TABLE_NAME}}` t \n\
    WHERE id= OLD.id ; \n\
END
