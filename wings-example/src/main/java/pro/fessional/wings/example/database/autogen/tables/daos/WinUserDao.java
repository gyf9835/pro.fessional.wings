/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.example.database.autogen.tables.daos;


import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import pro.fessional.wings.example.database.autogen.tables.WinUserTable;
import pro.fessional.wings.example.database.autogen.tables.pojos.WinUser;
import pro.fessional.wings.example.database.autogen.tables.records.WinUserRecord;
import pro.fessional.wings.faceless.database.jooq.WingsJooqDaoImpl;

import javax.annotation.Generated;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;


/**
 * The table <code>wings_example.win_user</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4",
        "schema version:2019070403"
    },
    date = "2020-07-09T09:12:23.997Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class WinUserDao extends WingsJooqDaoImpl<WinUserTable, WinUserRecord, WinUser, Long> {

    /**
     * Create a new WinUserDao without any configuration
     */
    public WinUserDao() {
        super(WinUserTable.WinUser, WinUserTable.asZ7, WinUser.class);
    }

    /**
     * Create a new WinUserDao with an attached configuration
     */
    @Autowired
    public WinUserDao(Configuration configuration) {
        super(WinUserTable.WinUser, WinUserTable.asZ7, WinUser.class, configuration);
    }

    @Override
    public Long getId(WinUser object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<WinUser> fetchById(Long... values) {
        return fetch(WinUserTable.WinUser.Id, values);
    }
    public List<WinUser> fetchByIdLive(Long... values) {
        return fetchLive(WinUserTable.WinUser.Id, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public WinUser fetchOneById(Long value) {
        return fetchOne(WinUserTable.WinUser.Id, value);
    }
    public WinUser fetchOneByIdLive(Long value) {
        return fetchOneLive(WinUserTable.WinUser.Id, value);
    }

    /**
     * Fetch records that have <code>create_dt IN (values)</code>
     */
    public List<WinUser> fetchByCreateDt(LocalDateTime... values) {
        return fetch(WinUserTable.WinUser.CreateDt, values);
    }
    public List<WinUser> fetchByCreateDtLive(LocalDateTime... values) {
        return fetchLive(WinUserTable.WinUser.CreateDt, values);
    }

    /**
     * Fetch records that have <code>modify_dt IN (values)</code>
     */
    public List<WinUser> fetchByModifyDt(LocalDateTime... values) {
        return fetch(WinUserTable.WinUser.ModifyDt, values);
    }
    public List<WinUser> fetchByModifyDtLive(LocalDateTime... values) {
        return fetchLive(WinUserTable.WinUser.ModifyDt, values);
    }

    /**
     * Fetch records that have <code>delete_dt IN (values)</code>
     */
    public List<WinUser> fetchByDeleteDt(LocalDateTime... values) {
        return fetch(WinUserTable.WinUser.DeleteDt, values);
    }
    public List<WinUser> fetchByDeleteDtLive(LocalDateTime... values) {
        return fetchLive(WinUserTable.WinUser.DeleteDt, values);
    }

    /**
     * Fetch records that have <code>commit_id IN (values)</code>
     */
    public List<WinUser> fetchByCommitId(Long... values) {
        return fetch(WinUserTable.WinUser.CommitId, values);
    }
    public List<WinUser> fetchByCommitIdLive(Long... values) {
        return fetchLive(WinUserTable.WinUser.CommitId, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<WinUser> fetchByName(String... values) {
        return fetch(WinUserTable.WinUser.Name, values);
    }
    public List<WinUser> fetchByNameLive(String... values) {
        return fetchLive(WinUserTable.WinUser.Name, values);
    }

    /**
     * Fetch records that have <code>gender IN (values)</code>
     */
    public List<WinUser> fetchByGender(Integer... values) {
        return fetch(WinUserTable.WinUser.Gender, values);
    }
    public List<WinUser> fetchByGenderLive(Integer... values) {
        return fetchLive(WinUserTable.WinUser.Gender, values);
    }

    /**
     * Fetch records that have <code>birth IN (values)</code>
     */
    public List<WinUser> fetchByBirth(LocalDate... values) {
        return fetch(WinUserTable.WinUser.Birth, values);
    }
    public List<WinUser> fetchByBirthLive(LocalDate... values) {
        return fetchLive(WinUserTable.WinUser.Birth, values);
    }

    /**
     * Fetch records that have <code>avatar IN (values)</code>
     */
    public List<WinUser> fetchByAvatar(String... values) {
        return fetch(WinUserTable.WinUser.Avatar, values);
    }
    public List<WinUser> fetchByAvatarLive(String... values) {
        return fetchLive(WinUserTable.WinUser.Avatar, values);
    }

    /**
     * Fetch records that have <code>country IN (values)</code>
     */
    public List<WinUser> fetchByCountry(String... values) {
        return fetch(WinUserTable.WinUser.Country, values);
    }
    public List<WinUser> fetchByCountryLive(String... values) {
        return fetchLive(WinUserTable.WinUser.Country, values);
    }

    /**
     * Fetch records that have <code>language IN (values)</code>
     */
    public List<WinUser> fetchByLanguage(String... values) {
        return fetch(WinUserTable.WinUser.Language, values);
    }
    public List<WinUser> fetchByLanguageLive(String... values) {
        return fetchLive(WinUserTable.WinUser.Language, values);
    }

    /**
     * Fetch records that have <code>timezone IN (values)</code>
     */
    public List<WinUser> fetchByTimezone(Integer... values) {
        return fetch(WinUserTable.WinUser.Timezone, values);
    }
    public List<WinUser> fetchByTimezoneLive(Integer... values) {
        return fetchLive(WinUserTable.WinUser.Timezone, values);
    }

    /**
     * Fetch records that have <code>auth_set IN (values)</code>
     */
    public List<WinUser> fetchByAuthSet(String... values) {
        return fetch(WinUserTable.WinUser.AuthSet, values);
    }
    public List<WinUser> fetchByAuthSetLive(String... values) {
        return fetchLive(WinUserTable.WinUser.AuthSet, values);
    }

    /**
     * Fetch records that have <code>role_set IN (values)</code>
     */
    public List<WinUser> fetchByRoleSet(String... values) {
        return fetch(WinUserTable.WinUser.RoleSet, values);
    }
    public List<WinUser> fetchByRoleSetLive(String... values) {
        return fetchLive(WinUserTable.WinUser.RoleSet, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<WinUser> fetchByStatus(Integer... values) {
        return fetch(WinUserTable.WinUser.Status, values);
    }
    public List<WinUser> fetchByStatusLive(Integer... values) {
        return fetchLive(WinUserTable.WinUser.Status, values);
    }
}
