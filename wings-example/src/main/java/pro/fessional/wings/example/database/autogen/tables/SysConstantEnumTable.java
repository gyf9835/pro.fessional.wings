/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.example.database.autogen.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.TableImpl;

import pro.fessional.wings.example.database.autogen.DefaultSchema;
import pro.fessional.wings.example.database.autogen.tables.records.SysConstantEnumRecord;
import pro.fessional.wings.faceless.database.jooq.WingsAliasTable;


/**
 * The table <code>wings_example.sys_constant_enum</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4",
        "schema version:2019070403"
    },
    date = "2020-08-13T07:33:30.191Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysConstantEnumTable extends TableImpl<SysConstantEnumRecord> implements WingsAliasTable<SysConstantEnumTable> {

    private static final long serialVersionUID = 1001029837;

    /**
     * The reference instance of <code>sys_constant_enum</code>
     */
    public static final SysConstantEnumTable SysConstantEnum = new SysConstantEnumTable();
    public static final SysConstantEnumTable asK5 = SysConstantEnum.as("k5");

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysConstantEnumRecord> getRecordType() {
        return SysConstantEnumRecord.class;
    }

    /**
     * The column <code>sys_constant_enum.id</code>.
     */
    public final TableField<SysConstantEnumRecord, Integer> Id = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "id:动态9位数起，静态8位以下，建议3-2-2分段（表-段-值）,00结尾为SUPER");

    /**
     * The column <code>sys_constant_enum.type</code>.
     */
    public final TableField<SysConstantEnumRecord, String> Type = createField(DSL.name("type"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "enum分组:相同type为同一Enum，自动Pascal命名");

    /**
     * The column <code>sys_constant_enum.code</code>.
     */
    public final TableField<SysConstantEnumRecord, String> Code = createField(DSL.name("code"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "enum名字:为SUPER时固定code|id，表示对外key,编码友好");

    /**
     * The column <code>sys_constant_enum.desc</code>.
     */
    public final TableField<SysConstantEnumRecord, String> Desc = createField(DSL.name("desc"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "默认名字:线上");

    /**
     * The column <code>sys_constant_enum.info</code>.
     */
    public final TableField<SysConstantEnumRecord, String> Info = createField(DSL.name("info"), org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "扩展信息:分类，过滤等，如果SUPER时，为模板Resource格式");

    /**
     * Create a <code>sys_constant_enum</code> table reference
     */
    public SysConstantEnumTable() {
        this(DSL.name("sys_constant_enum"), null);
    }

    /**
     * Create an aliased <code>sys_constant_enum</code> table reference
     */
    public SysConstantEnumTable(String alias) {
        this(DSL.name(alias), SysConstantEnum);
    }

    /**
     * Create an aliased <code>sys_constant_enum</code> table reference
     */
    public SysConstantEnumTable(Name alias) {
        this(alias, SysConstantEnum);
    }

    private SysConstantEnumTable(Name alias, Table<SysConstantEnumRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysConstantEnumTable(Name alias, Table<SysConstantEnumRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("105/常量枚举:自动生成enum类"));
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public UniqueKey<SysConstantEnumRecord> getPrimaryKey() {
        return Internal.createUniqueKey(pro.fessional.wings.example.database.autogen.tables.SysConstantEnumTable.SysConstantEnum, "KEY_sys_constant_enum_PRIMARY", pro.fessional.wings.example.database.autogen.tables.SysConstantEnumTable.SysConstantEnum.Id);
    }

    @Override
    public List<UniqueKey<SysConstantEnumRecord>> getKeys() {
        return Arrays.<UniqueKey<SysConstantEnumRecord>>asList(
              Internal.createUniqueKey(pro.fessional.wings.example.database.autogen.tables.SysConstantEnumTable.SysConstantEnum, "KEY_sys_constant_enum_PRIMARY", pro.fessional.wings.example.database.autogen.tables.SysConstantEnumTable.SysConstantEnum.Id)
        );
    }

    @Override
    public SysConstantEnumTable as(String alias) {
        return new SysConstantEnumTable(DSL.name(alias), this);
    }

    @Override
    public SysConstantEnumTable as(Name alias) {
        return new SysConstantEnumTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysConstantEnumTable rename(String name) {
        return new SysConstantEnumTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysConstantEnumTable rename(Name name) {
        return new SysConstantEnumTable(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * alias K5
     */
    @Override
    public SysConstantEnumTable getAliasTable() {
        return asK5;
    }
}
