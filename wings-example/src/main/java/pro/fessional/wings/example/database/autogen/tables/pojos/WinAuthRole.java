/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.example.database.autogen.tables.pojos;


import java.time.LocalDateTime;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import pro.fessional.wings.example.database.autogen.tables.interfaces.IWinAuthRole;


/**
 * The table <code>wings_example.win_auth_role</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4",
        "schema version:2019070403"
    },
    date = "2020-08-13T07:33:30.191Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "win_auth_role", uniqueConstraints = {
    @UniqueConstraint(name = "KEY_win_auth_role_PRIMARY", columnNames = {"id"})
})
public class WinAuthRole implements IWinAuthRole {

    private static final long serialVersionUID = 38133031;

    private Long          id;
    private LocalDateTime createDt;
    private LocalDateTime modifyDt;
    private LocalDateTime deleteDt;
    private Long          commitId;
    private Integer       roleType;
    private String        roleName;
    private String        desc;
    private String        authSet;

    public WinAuthRole() {}

    public WinAuthRole(IWinAuthRole value) {
        this.id = value.getId();
        this.createDt = value.getCreateDt();
        this.modifyDt = value.getModifyDt();
        this.deleteDt = value.getDeleteDt();
        this.commitId = value.getCommitId();
        this.roleType = value.getRoleType();
        this.roleName = value.getRoleName();
        this.desc = value.getDesc();
        this.authSet = value.getAuthSet();
    }

    public WinAuthRole(
        Long          id,
        LocalDateTime createDt,
        LocalDateTime modifyDt,
        LocalDateTime deleteDt,
        Long          commitId,
        Integer       roleType,
        String        roleName,
        String        desc,
        String        authSet
    ) {
        this.id = id;
        this.createDt = createDt;
        this.modifyDt = modifyDt;
        this.deleteDt = deleteDt;
        this.commitId = commitId;
        this.roleType = roleType;
        this.roleName = roleName;
        this.desc = desc;
        this.authSet = authSet;
    }

    @Id
    @Column(name = "id", nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getId() {
        return this.id;
    }

    @Override
    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "create_dt", nullable = false)
    @Override
    public LocalDateTime getCreateDt() {
        return this.createDt;
    }

    @Override
    public void setCreateDt(LocalDateTime createDt) {
        this.createDt = createDt;
    }

    @Column(name = "modify_dt", nullable = false)
    @Override
    public LocalDateTime getModifyDt() {
        return this.modifyDt;
    }

    @Override
    public void setModifyDt(LocalDateTime modifyDt) {
        this.modifyDt = modifyDt;
    }

    @Column(name = "delete_dt", nullable = false)
    @Override
    public LocalDateTime getDeleteDt() {
        return this.deleteDt;
    }

    @Override
    public void setDeleteDt(LocalDateTime deleteDt) {
        this.deleteDt = deleteDt;
    }

    @Column(name = "commit_id", nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getCommitId() {
        return this.commitId;
    }

    @Override
    public void setCommitId(Long commitId) {
        this.commitId = commitId;
    }

    @Column(name = "role_type", nullable = false, precision = 10)
    @NotNull
    @Override
    public Integer getRoleType() {
        return this.roleType;
    }

    @Override
    public void setRoleType(Integer roleType) {
        this.roleType = roleType;
    }

    @Column(name = "role_name", nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    @Override
    public String getRoleName() {
        return this.roleName;
    }

    @Override
    public void setRoleName(String roleName) {
        this.roleName = roleName;
    }

    @Column(name = "desc", nullable = false, length = 200)
    @Size(max = 200)
    @Override
    public String getDesc() {
        return this.desc;
    }

    @Override
    public void setDesc(String desc) {
        this.desc = desc;
    }

    @Column(name = "auth_set", nullable = false, length = 3000)
    @NotNull
    @Size(max = 3000)
    @Override
    public String getAuthSet() {
        return this.authSet;
    }

    @Override
    public void setAuthSet(String authSet) {
        this.authSet = authSet;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final WinAuthRole other = (WinAuthRole) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (createDt == null) {
            if (other.createDt != null)
                return false;
        }
        else if (!createDt.equals(other.createDt))
            return false;
        if (modifyDt == null) {
            if (other.modifyDt != null)
                return false;
        }
        else if (!modifyDt.equals(other.modifyDt))
            return false;
        if (deleteDt == null) {
            if (other.deleteDt != null)
                return false;
        }
        else if (!deleteDt.equals(other.deleteDt))
            return false;
        if (commitId == null) {
            if (other.commitId != null)
                return false;
        }
        else if (!commitId.equals(other.commitId))
            return false;
        if (roleType == null) {
            if (other.roleType != null)
                return false;
        }
        else if (!roleType.equals(other.roleType))
            return false;
        if (roleName == null) {
            if (other.roleName != null)
                return false;
        }
        else if (!roleName.equals(other.roleName))
            return false;
        if (desc == null) {
            if (other.desc != null)
                return false;
        }
        else if (!desc.equals(other.desc))
            return false;
        if (authSet == null) {
            if (other.authSet != null)
                return false;
        }
        else if (!authSet.equals(other.authSet))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createDt == null) ? 0 : this.createDt.hashCode());
        result = prime * result + ((this.modifyDt == null) ? 0 : this.modifyDt.hashCode());
        result = prime * result + ((this.deleteDt == null) ? 0 : this.deleteDt.hashCode());
        result = prime * result + ((this.commitId == null) ? 0 : this.commitId.hashCode());
        result = prime * result + ((this.roleType == null) ? 0 : this.roleType.hashCode());
        result = prime * result + ((this.roleName == null) ? 0 : this.roleName.hashCode());
        result = prime * result + ((this.desc == null) ? 0 : this.desc.hashCode());
        result = prime * result + ((this.authSet == null) ? 0 : this.authSet.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("WinAuthRole (");

        sb.append(id);
        sb.append(", ").append(createDt);
        sb.append(", ").append(modifyDt);
        sb.append(", ").append(deleteDt);
        sb.append(", ").append(commitId);
        sb.append(", ").append(roleType);
        sb.append(", ").append(roleName);
        sb.append(", ").append(desc);
        sb.append(", ").append(authSet);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IWinAuthRole from) {
        setId(from.getId());
        setCreateDt(from.getCreateDt());
        setModifyDt(from.getModifyDt());
        setDeleteDt(from.getDeleteDt());
        setCommitId(from.getCommitId());
        setRoleType(from.getRoleType());
        setRoleName(from.getRoleName());
        setDesc(from.getDesc());
        setAuthSet(from.getAuthSet());
    }

    @Override
    public <E extends IWinAuthRole> E into(E into) {
        into.from(this);
        return into;
    }
}
