/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.example.database.autogen.tables.daos;


import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import pro.fessional.wings.example.database.autogen.tables.WinAuthRoleTable;
import pro.fessional.wings.example.database.autogen.tables.pojos.WinAuthRole;
import pro.fessional.wings.example.database.autogen.tables.records.WinAuthRoleRecord;
import pro.fessional.wings.faceless.database.jooq.WingsJooqDaoImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.List;


/**
 * The table <code>wings_example.win_auth_role</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4",
        "schema version:2019070403"
    },
    date = "2020-07-09T09:12:23.997Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class WinAuthRoleDao extends WingsJooqDaoImpl<WinAuthRoleTable, WinAuthRoleRecord, WinAuthRole, Long> {

    /**
     * Create a new WinAuthRoleDao without any configuration
     */
    public WinAuthRoleDao() {
        super(WinAuthRoleTable.WinAuthRole, WinAuthRoleTable.asS1, WinAuthRole.class);
    }

    /**
     * Create a new WinAuthRoleDao with an attached configuration
     */
    @Autowired
    public WinAuthRoleDao(Configuration configuration) {
        super(WinAuthRoleTable.WinAuthRole, WinAuthRoleTable.asS1, WinAuthRole.class, configuration);
    }

    @Override
    public Long getId(WinAuthRole object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<WinAuthRole> fetchById(Long... values) {
        return fetch(WinAuthRoleTable.WinAuthRole.Id, values);
    }
    public List<WinAuthRole> fetchByIdLive(Long... values) {
        return fetchLive(WinAuthRoleTable.WinAuthRole.Id, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public WinAuthRole fetchOneById(Long value) {
        return fetchOne(WinAuthRoleTable.WinAuthRole.Id, value);
    }
    public WinAuthRole fetchOneByIdLive(Long value) {
        return fetchOneLive(WinAuthRoleTable.WinAuthRole.Id, value);
    }

    /**
     * Fetch records that have <code>create_dt IN (values)</code>
     */
    public List<WinAuthRole> fetchByCreateDt(LocalDateTime... values) {
        return fetch(WinAuthRoleTable.WinAuthRole.CreateDt, values);
    }
    public List<WinAuthRole> fetchByCreateDtLive(LocalDateTime... values) {
        return fetchLive(WinAuthRoleTable.WinAuthRole.CreateDt, values);
    }

    /**
     * Fetch records that have <code>modify_dt IN (values)</code>
     */
    public List<WinAuthRole> fetchByModifyDt(LocalDateTime... values) {
        return fetch(WinAuthRoleTable.WinAuthRole.ModifyDt, values);
    }
    public List<WinAuthRole> fetchByModifyDtLive(LocalDateTime... values) {
        return fetchLive(WinAuthRoleTable.WinAuthRole.ModifyDt, values);
    }

    /**
     * Fetch records that have <code>delete_dt IN (values)</code>
     */
    public List<WinAuthRole> fetchByDeleteDt(LocalDateTime... values) {
        return fetch(WinAuthRoleTable.WinAuthRole.DeleteDt, values);
    }
    public List<WinAuthRole> fetchByDeleteDtLive(LocalDateTime... values) {
        return fetchLive(WinAuthRoleTable.WinAuthRole.DeleteDt, values);
    }

    /**
     * Fetch records that have <code>commit_id IN (values)</code>
     */
    public List<WinAuthRole> fetchByCommitId(Long... values) {
        return fetch(WinAuthRoleTable.WinAuthRole.CommitId, values);
    }
    public List<WinAuthRole> fetchByCommitIdLive(Long... values) {
        return fetchLive(WinAuthRoleTable.WinAuthRole.CommitId, values);
    }

    /**
     * Fetch records that have <code>role_type IN (values)</code>
     */
    public List<WinAuthRole> fetchByRoleType(Integer... values) {
        return fetch(WinAuthRoleTable.WinAuthRole.RoleType, values);
    }
    public List<WinAuthRole> fetchByRoleTypeLive(Integer... values) {
        return fetchLive(WinAuthRoleTable.WinAuthRole.RoleType, values);
    }

    /**
     * Fetch records that have <code>role_name IN (values)</code>
     */
    public List<WinAuthRole> fetchByRoleName(String... values) {
        return fetch(WinAuthRoleTable.WinAuthRole.RoleName, values);
    }
    public List<WinAuthRole> fetchByRoleNameLive(String... values) {
        return fetchLive(WinAuthRoleTable.WinAuthRole.RoleName, values);
    }

    /**
     * Fetch records that have <code>desc IN (values)</code>
     */
    public List<WinAuthRole> fetchByDesc(String... values) {
        return fetch(WinAuthRoleTable.WinAuthRole.Desc, values);
    }
    public List<WinAuthRole> fetchByDescLive(String... values) {
        return fetchLive(WinAuthRoleTable.WinAuthRole.Desc, values);
    }

    /**
     * Fetch records that have <code>auth_set IN (values)</code>
     */
    public List<WinAuthRole> fetchByAuthSet(String... values) {
        return fetch(WinAuthRoleTable.WinAuthRole.AuthSet, values);
    }
    public List<WinAuthRole> fetchByAuthSetLive(String... values) {
        return fetchLive(WinAuthRoleTable.WinAuthRole.AuthSet, values);
    }
}
