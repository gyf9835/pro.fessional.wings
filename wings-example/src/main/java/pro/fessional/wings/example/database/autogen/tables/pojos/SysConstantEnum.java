/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.example.database.autogen.tables.pojos;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import pro.fessional.wings.example.database.autogen.tables.interfaces.ISysConstantEnum;


/**
 * The table <code>wings_example.sys_constant_enum</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4",
        "schema version:2019070403"
    },
    date = "2020-08-11T12:05:15.799Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "sys_constant_enum", uniqueConstraints = {
    @UniqueConstraint(name = "KEY_sys_constant_enum_PRIMARY", columnNames = {"id"})
})
public class SysConstantEnum implements ISysConstantEnum {

    private static final long serialVersionUID = 1476924119;

    private Integer id;
    private String  type;
    private String  code;
    private String  desc;
    private String  info;

    public SysConstantEnum() {}

    public SysConstantEnum(ISysConstantEnum value) {
        this.id = value.getId();
        this.type = value.getType();
        this.code = value.getCode();
        this.desc = value.getDesc();
        this.info = value.getInfo();
    }

    public SysConstantEnum(
        Integer id,
        String  type,
        String  code,
        String  desc,
        String  info
    ) {
        this.id = id;
        this.type = type;
        this.code = code;
        this.desc = desc;
        this.info = info;
    }

    @Id
    @Column(name = "id", nullable = false, precision = 10)
    @NotNull
    @Override
    public Integer getId() {
        return this.id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "type", nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    @Override
    public String getType() {
        return this.type;
    }

    @Override
    public void setType(String type) {
        this.type = type;
    }

    @Column(name = "code", nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    @Override
    public String getCode() {
        return this.code;
    }

    @Override
    public void setCode(String code) {
        this.code = code;
    }

    @Column(name = "desc", nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    @Override
    public String getDesc() {
        return this.desc;
    }

    @Override
    public void setDesc(String desc) {
        this.desc = desc;
    }

    @Column(name = "info", nullable = false, length = 500)
    @NotNull
    @Size(max = 500)
    @Override
    public String getInfo() {
        return this.info;
    }

    @Override
    public void setInfo(String info) {
        this.info = info;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final SysConstantEnum other = (SysConstantEnum) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (type == null) {
            if (other.type != null)
                return false;
        }
        else if (!type.equals(other.type))
            return false;
        if (code == null) {
            if (other.code != null)
                return false;
        }
        else if (!code.equals(other.code))
            return false;
        if (desc == null) {
            if (other.desc != null)
                return false;
        }
        else if (!desc.equals(other.desc))
            return false;
        if (info == null) {
            if (other.info != null)
                return false;
        }
        else if (!info.equals(other.info))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.code == null) ? 0 : this.code.hashCode());
        result = prime * result + ((this.desc == null) ? 0 : this.desc.hashCode());
        result = prime * result + ((this.info == null) ? 0 : this.info.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("SysConstantEnum (");

        sb.append(id);
        sb.append(", ").append(type);
        sb.append(", ").append(code);
        sb.append(", ").append(desc);
        sb.append(", ").append(info);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ISysConstantEnum from) {
        setId(from.getId());
        setType(from.getType());
        setCode(from.getCode());
        setDesc(from.getDesc());
        setInfo(from.getInfo());
    }

    @Override
    public <E extends ISysConstantEnum> E into(E into) {
        into.from(this);
        return into;
    }
}
