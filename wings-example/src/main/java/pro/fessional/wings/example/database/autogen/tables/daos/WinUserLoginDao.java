/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.example.database.autogen.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import pro.fessional.wings.example.database.autogen.tables.WinUserLoginTable;
import pro.fessional.wings.example.database.autogen.tables.pojos.WinUserLogin;
import pro.fessional.wings.example.database.autogen.tables.records.WinUserLoginRecord;
import pro.fessional.wings.faceless.database.common.WingsJooqDaoImpl;


/**
 * The table <code>wings_0.win_user_login</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4",
        "schema version:2019070403"
    },
    date = "2020-06-16T08:45:49.702Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class WinUserLoginDao extends WingsJooqDaoImpl<WinUserLoginTable, WinUserLoginRecord, WinUserLogin, Long> {

    /**
     * Create a new WinUserLoginDao without any configuration
     */
    public WinUserLoginDao() {
        super(WinUserLoginTable.WinUserLogin, WinUserLoginTable.asA2, WinUserLogin.class);
    }

    /**
     * Create a new WinUserLoginDao with an attached configuration
     */
    @Autowired
    public WinUserLoginDao(Configuration configuration) {
        super(WinUserLoginTable.WinUserLogin, WinUserLoginTable.asA2, WinUserLogin.class, configuration);
    }

    @Override
    public Long getId(WinUserLogin object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<WinUserLogin> fetchById(Long... values) {
        return fetch(WinUserLoginTable.asA2.Id, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public WinUserLogin fetchOneById(Long value) {
        return fetchOne(WinUserLoginTable.asA2.Id, value);
    }

    /**
     * Fetch records that have <code>create_dt IN (values)</code>
     */
    public List<WinUserLogin> fetchByCreateDt(LocalDateTime... values) {
        return fetch(WinUserLoginTable.asA2.CreateDt, values);
    }

    /**
     * Fetch records that have <code>modify_dt IN (values)</code>
     */
    public List<WinUserLogin> fetchByModifyDt(LocalDateTime... values) {
        return fetch(WinUserLoginTable.asA2.ModifyDt, values);
    }

    /**
     * Fetch records that have <code>delete_dt IN (values)</code>
     */
    public List<WinUserLogin> fetchByDeleteDt(LocalDateTime... values) {
        return fetch(WinUserLoginTable.asA2.DeleteDt, values);
    }

    /**
     * Fetch records that have <code>commit_id IN (values)</code>
     */
    public List<WinUserLogin> fetchByCommitId(Long... values) {
        return fetch(WinUserLoginTable.asA2.CommitId, values);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<WinUserLogin> fetchByUserId(Long... values) {
        return fetch(WinUserLoginTable.asA2.UserId, values);
    }

    /**
     * Fetch records that have <code>login_type IN (values)</code>
     */
    public List<WinUserLogin> fetchByLoginType(Integer... values) {
        return fetch(WinUserLoginTable.asA2.LoginType, values);
    }

    /**
     * Fetch records that have <code>login_name IN (values)</code>
     */
    public List<WinUserLogin> fetchByLoginName(String... values) {
        return fetch(WinUserLoginTable.asA2.LoginName, values);
    }

    /**
     * Fetch records that have <code>login_pass IN (values)</code>
     */
    public List<WinUserLogin> fetchByLoginPass(String... values) {
        return fetch(WinUserLoginTable.asA2.LoginPass, values);
    }

    /**
     * Fetch records that have <code>login_salt IN (values)</code>
     */
    public List<WinUserLogin> fetchByLoginSalt(String... values) {
        return fetch(WinUserLoginTable.asA2.LoginSalt, values);
    }

    /**
     * Fetch records that have <code>login_para IN (values)</code>
     */
    public List<WinUserLogin> fetchByLoginPara(String... values) {
        return fetch(WinUserLoginTable.asA2.LoginPara, values);
    }

    /**
     * Fetch records that have <code>auth_code IN (values)</code>
     */
    public List<WinUserLogin> fetchByAuthCode(String... values) {
        return fetch(WinUserLoginTable.asA2.AuthCode, values);
    }

    /**
     * Fetch records that have <code>bad_count IN (values)</code>
     */
    public List<WinUserLogin> fetchByBadCount(Integer... values) {
        return fetch(WinUserLoginTable.asA2.BadCount, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<WinUserLogin> fetchByStatus(Integer... values) {
        return fetch(WinUserLoginTable.asA2.Status, values);
    }
}
