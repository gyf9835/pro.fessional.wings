/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.example.database.autogen.tables.pojos;


import java.time.LocalDate;
import java.time.LocalDateTime;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import pro.fessional.wings.example.database.autogen.tables.interfaces.IWinUser;


/**
 * The table <code>wings_example.win_user</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4",
        "schema version:2019070403"
    },
    date = "2020-08-13T07:33:30.191Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "win_user", uniqueConstraints = {
    @UniqueConstraint(name = "KEY_win_user_PRIMARY", columnNames = {"id"})
})
public class WinUser implements IWinUser {

    private static final long serialVersionUID = -942224318;

    private Long          id;
    private LocalDateTime createDt;
    private LocalDateTime modifyDt;
    private LocalDateTime deleteDt;
    private Long          commitId;
    private String        name;
    private Integer       gender;
    private LocalDate     birth;
    private String        avatar;
    private String        country;
    private String        language;
    private Integer       timezone;
    private String        authSet;
    private String        roleSet;
    private Integer       status;

    public WinUser() {}

    public WinUser(IWinUser value) {
        this.id = value.getId();
        this.createDt = value.getCreateDt();
        this.modifyDt = value.getModifyDt();
        this.deleteDt = value.getDeleteDt();
        this.commitId = value.getCommitId();
        this.name = value.getName();
        this.gender = value.getGender();
        this.birth = value.getBirth();
        this.avatar = value.getAvatar();
        this.country = value.getCountry();
        this.language = value.getLanguage();
        this.timezone = value.getTimezone();
        this.authSet = value.getAuthSet();
        this.roleSet = value.getRoleSet();
        this.status = value.getStatus();
    }

    public WinUser(
        Long          id,
        LocalDateTime createDt,
        LocalDateTime modifyDt,
        LocalDateTime deleteDt,
        Long          commitId,
        String        name,
        Integer       gender,
        LocalDate     birth,
        String        avatar,
        String        country,
        String        language,
        Integer       timezone,
        String        authSet,
        String        roleSet,
        Integer       status
    ) {
        this.id = id;
        this.createDt = createDt;
        this.modifyDt = modifyDt;
        this.deleteDt = deleteDt;
        this.commitId = commitId;
        this.name = name;
        this.gender = gender;
        this.birth = birth;
        this.avatar = avatar;
        this.country = country;
        this.language = language;
        this.timezone = timezone;
        this.authSet = authSet;
        this.roleSet = roleSet;
        this.status = status;
    }

    @Id
    @Column(name = "id", nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getId() {
        return this.id;
    }

    @Override
    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "create_dt", nullable = false)
    @Override
    public LocalDateTime getCreateDt() {
        return this.createDt;
    }

    @Override
    public void setCreateDt(LocalDateTime createDt) {
        this.createDt = createDt;
    }

    @Column(name = "modify_dt", nullable = false)
    @Override
    public LocalDateTime getModifyDt() {
        return this.modifyDt;
    }

    @Override
    public void setModifyDt(LocalDateTime modifyDt) {
        this.modifyDt = modifyDt;
    }

    @Column(name = "delete_dt", nullable = false)
    @Override
    public LocalDateTime getDeleteDt() {
        return this.deleteDt;
    }

    @Override
    public void setDeleteDt(LocalDateTime deleteDt) {
        this.deleteDt = deleteDt;
    }

    @Column(name = "commit_id", nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getCommitId() {
        return this.commitId;
    }

    @Override
    public void setCommitId(Long commitId) {
        this.commitId = commitId;
    }

    @Column(name = "name", nullable = false, length = 50)
    @NotNull
    @Size(max = 50)
    @Override
    public String getName() {
        return this.name;
    }

    @Override
    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "gender", nullable = false, precision = 10)
    @NotNull
    @Override
    public Integer getGender() {
        return this.gender;
    }

    @Override
    public void setGender(Integer gender) {
        this.gender = gender;
    }

    @Column(name = "birth", nullable = false)
    @NotNull
    @Override
    public LocalDate getBirth() {
        return this.birth;
    }

    @Override
    public void setBirth(LocalDate birth) {
        this.birth = birth;
    }

    @Column(name = "avatar", nullable = false, length = 200)
    @NotNull
    @Size(max = 200)
    @Override
    public String getAvatar() {
        return this.avatar;
    }

    @Override
    public void setAvatar(String avatar) {
        this.avatar = avatar;
    }

    @Column(name = "country", nullable = false, length = 2)
    @NotNull
    @Size(max = 2)
    @Override
    public String getCountry() {
        return this.country;
    }

    @Override
    public void setCountry(String country) {
        this.country = country;
    }

    @Column(name = "language", nullable = false, length = 5)
    @NotNull
    @Size(max = 5)
    @Override
    public String getLanguage() {
        return this.language;
    }

    @Override
    public void setLanguage(String language) {
        this.language = language;
    }

    @Column(name = "timezone", nullable = false, precision = 10)
    @NotNull
    @Override
    public Integer getTimezone() {
        return this.timezone;
    }

    @Override
    public void setTimezone(Integer timezone) {
        this.timezone = timezone;
    }

    @Column(name = "auth_set", nullable = false, length = 2000)
    @Size(max = 2000)
    @Override
    public String getAuthSet() {
        return this.authSet;
    }

    @Override
    public void setAuthSet(String authSet) {
        this.authSet = authSet;
    }

    @Column(name = "role_set", nullable = false, length = 1000)
    @Size(max = 1000)
    @Override
    public String getRoleSet() {
        return this.roleSet;
    }

    @Override
    public void setRoleSet(String roleSet) {
        this.roleSet = roleSet;
    }

    @Column(name = "status", nullable = false, precision = 10)
    @NotNull
    @Override
    public Integer getStatus() {
        return this.status;
    }

    @Override
    public void setStatus(Integer status) {
        this.status = status;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final WinUser other = (WinUser) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (createDt == null) {
            if (other.createDt != null)
                return false;
        }
        else if (!createDt.equals(other.createDt))
            return false;
        if (modifyDt == null) {
            if (other.modifyDt != null)
                return false;
        }
        else if (!modifyDt.equals(other.modifyDt))
            return false;
        if (deleteDt == null) {
            if (other.deleteDt != null)
                return false;
        }
        else if (!deleteDt.equals(other.deleteDt))
            return false;
        if (commitId == null) {
            if (other.commitId != null)
                return false;
        }
        else if (!commitId.equals(other.commitId))
            return false;
        if (name == null) {
            if (other.name != null)
                return false;
        }
        else if (!name.equals(other.name))
            return false;
        if (gender == null) {
            if (other.gender != null)
                return false;
        }
        else if (!gender.equals(other.gender))
            return false;
        if (birth == null) {
            if (other.birth != null)
                return false;
        }
        else if (!birth.equals(other.birth))
            return false;
        if (avatar == null) {
            if (other.avatar != null)
                return false;
        }
        else if (!avatar.equals(other.avatar))
            return false;
        if (country == null) {
            if (other.country != null)
                return false;
        }
        else if (!country.equals(other.country))
            return false;
        if (language == null) {
            if (other.language != null)
                return false;
        }
        else if (!language.equals(other.language))
            return false;
        if (timezone == null) {
            if (other.timezone != null)
                return false;
        }
        else if (!timezone.equals(other.timezone))
            return false;
        if (authSet == null) {
            if (other.authSet != null)
                return false;
        }
        else if (!authSet.equals(other.authSet))
            return false;
        if (roleSet == null) {
            if (other.roleSet != null)
                return false;
        }
        else if (!roleSet.equals(other.roleSet))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createDt == null) ? 0 : this.createDt.hashCode());
        result = prime * result + ((this.modifyDt == null) ? 0 : this.modifyDt.hashCode());
        result = prime * result + ((this.deleteDt == null) ? 0 : this.deleteDt.hashCode());
        result = prime * result + ((this.commitId == null) ? 0 : this.commitId.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.gender == null) ? 0 : this.gender.hashCode());
        result = prime * result + ((this.birth == null) ? 0 : this.birth.hashCode());
        result = prime * result + ((this.avatar == null) ? 0 : this.avatar.hashCode());
        result = prime * result + ((this.country == null) ? 0 : this.country.hashCode());
        result = prime * result + ((this.language == null) ? 0 : this.language.hashCode());
        result = prime * result + ((this.timezone == null) ? 0 : this.timezone.hashCode());
        result = prime * result + ((this.authSet == null) ? 0 : this.authSet.hashCode());
        result = prime * result + ((this.roleSet == null) ? 0 : this.roleSet.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("WinUser (");

        sb.append(id);
        sb.append(", ").append(createDt);
        sb.append(", ").append(modifyDt);
        sb.append(", ").append(deleteDt);
        sb.append(", ").append(commitId);
        sb.append(", ").append(name);
        sb.append(", ").append(gender);
        sb.append(", ").append(birth);
        sb.append(", ").append(avatar);
        sb.append(", ").append(country);
        sb.append(", ").append(language);
        sb.append(", ").append(timezone);
        sb.append(", ").append(authSet);
        sb.append(", ").append(roleSet);
        sb.append(", ").append(status);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IWinUser from) {
        setId(from.getId());
        setCreateDt(from.getCreateDt());
        setModifyDt(from.getModifyDt());
        setDeleteDt(from.getDeleteDt());
        setCommitId(from.getCommitId());
        setName(from.getName());
        setGender(from.getGender());
        setBirth(from.getBirth());
        setAvatar(from.getAvatar());
        setCountry(from.getCountry());
        setLanguage(from.getLanguage());
        setTimezone(from.getTimezone());
        setAuthSet(from.getAuthSet());
        setRoleSet(from.getRoleSet());
        setStatus(from.getStatus());
    }

    @Override
    public <E extends IWinUser> E into(E into) {
        into.from(this);
        return into;
    }
}
