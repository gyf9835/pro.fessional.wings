/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pro.fessional.wings.example.exec;

import javax.swing.*;
import java.awt.*;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;


/**
 * @author trydofor
 */
public class Wings0InitProject extends javax.swing.JFrame {

    /**
     * Creates new form Wings0InitProject
     */
    public Wings0InitProject() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        pnlPath = new javax.swing.JPanel();
        btnWingsPath = new javax.swing.JButton();
        btnProjectPath = new javax.swing.JButton();
        txtWingsPath = new javax.swing.JTextField();
        txtProjectPath = new javax.swing.JTextField();
        pnlName = new javax.swing.JPanel();
        lblGroupId = new javax.swing.JLabel();
        txtGroupId = new javax.swing.JTextField();
        lblArtifactId = new javax.swing.JLabel();
        txtArtifactId = new javax.swing.JTextField();
        lblPackage = new javax.swing.JLabel();
        txtPackage = new javax.swing.JTextField();
        lblApplication = new javax.swing.JLabel();
        txtApplication = new javax.swing.JTextField();
        pnlGenerator = new javax.swing.JPanel();
        btnGenerate = new javax.swing.JButton();
        pgbGenerate = new javax.swing.JProgressBar();
        jspMessage = new javax.swing.JScrollPane();
        txaMessage = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("WingsTemplate"); // NOI18N

        pnlPath.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnWingsPath.setText("WingsDir");

        btnProjectPath.setText("ProjectDir");

        txtWingsPath.setText("wings");

        txtProjectPath.setText("./");

        javax.swing.GroupLayout pnlPathLayout = new javax.swing.GroupLayout(pnlPath);
        pnlPath.setLayout(pnlPathLayout);
        pnlPathLayout.setHorizontalGroup(
                pnlPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                             .addGroup(pnlPathLayout.createSequentialGroup()
                                                    .addContainerGap()
                                                    .addGroup(pnlPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                           .addComponent(btnWingsPath, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                           .addComponent(btnProjectPath, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGap(18, 18, 18)
                                                    .addGroup(pnlPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                           .addComponent(txtWingsPath)
                                                                           .addComponent(txtProjectPath))
                                                    .addContainerGap())
        );
        pnlPathLayout.setVerticalGroup(
                pnlPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                             .addGroup(pnlPathLayout.createSequentialGroup()
                                                    .addContainerGap()
                                                    .addGroup(pnlPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                           .addComponent(txtWingsPath, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                           .addComponent(btnWingsPath, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addGroup(pnlPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                           .addComponent(txtProjectPath, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                           .addComponent(btnProjectPath, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlName.setBorder(javax.swing.BorderFactory.createTitledBorder("properties"));

        lblGroupId.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblGroupId.setText("groupId");

        txtGroupId.setText("pro.fessional");

        lblArtifactId.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblArtifactId.setText("artifactId");

        txtArtifactId.setText("wings-example");

        lblPackage.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPackage.setText("package");

        txtPackage.setText("pro.fessional.wings.example");

        lblApplication.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblApplication.setText("application");

        txtApplication.setText("WingsExampleApplication");

        javax.swing.GroupLayout pnlNameLayout = new javax.swing.GroupLayout(pnlName);
        pnlName.setLayout(pnlNameLayout);
        pnlNameLayout.setHorizontalGroup(
                pnlNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                             .addGroup(pnlNameLayout.createSequentialGroup()
                                                    .addGroup(pnlNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                           .addGroup(pnlNameLayout.createSequentialGroup()
                                                                                                  .addGap(17, 17, 17)
                                                                                                  .addComponent(lblGroupId, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                           .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNameLayout.createSequentialGroup()
                                                                                                                                              .addContainerGap()
                                                                                                                                              .addGroup(pnlNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                                                                                                     .addComponent(lblArtifactId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                                                                                     .addComponent(lblPackage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                                                                                     .addComponent(lblApplication, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                    .addGap(18, 18, 18)
                                                    .addGroup(pnlNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                           .addComponent(txtGroupId)
                                                                           .addComponent(txtArtifactId)
                                                                           .addComponent(txtPackage, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                                                                           .addComponent(txtApplication))
                                                    .addContainerGap())
        );
        pnlNameLayout.setVerticalGroup(
                pnlNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                             .addGroup(pnlNameLayout.createSequentialGroup()
                                                    .addGap(9, 9, 9)
                                                    .addGroup(pnlNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                           .addComponent(txtGroupId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                           .addComponent(lblGroupId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addGroup(pnlNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                           .addComponent(txtArtifactId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                           .addComponent(lblArtifactId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addGroup(pnlNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                           .addComponent(lblPackage, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                           .addComponent(txtPackage, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addGroup(pnlNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                           .addComponent(lblApplication, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                           .addComponent(txtApplication, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addContainerGap(12, Short.MAX_VALUE))
        );

        btnGenerate.setText("Generate");

        txaMessage.setColumns(20);
        txaMessage.setRows(5);
        jspMessage.setViewportView(txaMessage);

        javax.swing.GroupLayout pnlGeneratorLayout = new javax.swing.GroupLayout(pnlGenerator);
        pnlGenerator.setLayout(pnlGeneratorLayout);
        pnlGeneratorLayout.setHorizontalGroup(
                pnlGeneratorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                  .addGroup(pnlGeneratorLayout.createSequentialGroup()
                                                              .addGroup(pnlGeneratorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                          .addGroup(pnlGeneratorLayout.createSequentialGroup()
                                                                                                                      .addComponent(btnGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                                                      .addComponent(pgbGenerate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                                          .addGroup(pnlGeneratorLayout.createSequentialGroup()
                                                                                                                      .addContainerGap()
                                                                                                                      .addComponent(jspMessage)))
                                                              .addContainerGap())
        );
        pnlGeneratorLayout.setVerticalGroup(
                pnlGeneratorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                  .addGroup(pnlGeneratorLayout.createSequentialGroup()
                                                              .addContainerGap()
                                                              .addGroup(pnlGeneratorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                                                                          .addComponent(btnGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                          .addComponent(pgbGenerate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                              .addComponent(jspMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                                                              .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                      .addGroup(layout.createSequentialGroup()
                                      .addContainerGap()
                                      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                      .addComponent(pnlGenerator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                      .addComponent(pnlPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                      .addComponent(pnlName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                      .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                      .addGroup(layout.createSequentialGroup()
                                      .addContainerGap()
                                      .addComponent(pnlPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                      .addComponent(pnlName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                      .addComponent(pnlGenerator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                      .addContainerGap())
        );

        pack();
    }// </editor-fold>

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Wings0InitProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Wings0InitProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Wings0InitProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Wings0InitProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                showWings(args);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton btnGenerate;
    private javax.swing.JButton btnProjectPath;
    private javax.swing.JButton btnWingsPath;
    private javax.swing.JScrollPane jspMessage;
    private javax.swing.JLabel lblApplication;
    private javax.swing.JLabel lblArtifactId;
    private javax.swing.JLabel lblGroupId;
    private javax.swing.JLabel lblPackage;
    private javax.swing.JProgressBar pgbGenerate;
    private javax.swing.JPanel pnlGenerator;
    private javax.swing.JPanel pnlName;
    private javax.swing.JPanel pnlPath;
    private javax.swing.JTextArea txaMessage;
    private javax.swing.JTextField txtApplication;
    private javax.swing.JTextField txtArtifactId;
    private javax.swing.JTextField txtGroupId;
    private javax.swing.JTextField txtPackage;
    private javax.swing.JTextField txtProjectPath;
    private javax.swing.JTextField txtWingsPath;
    // End of variables declaration

    private static void showWings(String[] args) {
        Wings0InitProject project = new Wings0InitProject();
        project.initWings(args);

        project.pack();
        project.setLocationRelativeTo(null); // 居中
        // 焦点
        project.setState(Frame.NORMAL);
        project.toFront();
        project.requestFocus();

        project.setVisible(true);
    }

    private void initWings(String[] args) {
        if (args.length > 0) {
            txtWingsPath.setText(args[0]);
        }
        if (args.length > 1) {
            txtProjectPath.setText(args[1]);
        }

        btnWingsPath.addActionListener(evt -> chooseDir("wings-example工程目录", txtWingsPath));
        btnProjectPath.addActionListener(evt -> chooseDir("新建工程目录", txtProjectPath));
        btnGenerate.addActionListener(evt -> generatePrj());

        FocusAdapter txtFocus = new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                ((JTextField) e.getSource()).selectAll();
            }
        };
        txtApplication.addFocusListener(txtFocus);
        txtArtifactId.addFocusListener(txtFocus);
        txtGroupId.addFocusListener(txtFocus);
        txtPackage.addFocusListener(txtFocus);
        txtProjectPath.addFocusListener(txtFocus);
        txtWingsPath.addFocusListener(txtFocus);
    }

    private void chooseDir(String name, JTextField field) {
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jfc.showDialog(new JLabel(), "选择" + name);
        File dir = jfc.getSelectedFile();
        if (dir != null) {
            field.setText(dir.getAbsolutePath());
        }
    }

    private void generatePrj() {
        String[] copyFiles = {
                "pom.xml",
                "src/main",
                "src/test/java/pro/fessional/wings/example/init",
                "src/test/resources/wings-i18n",
                };

        try {
            File wings = new File(txtWingsPath.getText());
            File project = new File(txtProjectPath.getText());
            String dstAbsPath = project.getAbsolutePath();
            String srcAbsPath = wings.getAbsolutePath();

            if (dstAbsPath.contains(srcAbsPath) || srcAbsPath.contains(dstAbsPath)) {
                message("新工程路径和wings-example有重合，重选");
                txtProjectPath.setText("和Wings目录一样，得重选");
                txtProjectPath.grabFocus();
                return;
            }

            pgbGenerate.setStringPainted(true);
            pgbGenerate.setString("嗖一下，就完事");
            pgbGenerate.setIndeterminate(true);

            if (!project.exists()) {
                message("创建新工程目录");
                project.mkdirs();
            }

            Info info = new Info();
            info.srcDir = srcAbsPath;
            info.srcApplication = "WingsExampleApplication";
            info.srcArtifactId = "wings-example";
            info.srcGroupId = "pro.fessional";
            info.srcPackage = "pro.fessional.wings.example";
            info.srcPkgPath = info.srcPackage.replace('.', '/');

            info.dstDir = dstAbsPath;
            info.dstApplication = txtApplication.getText();
            info.dstArtifactId = txtArtifactId.getText();
            info.dstGroupId = txtGroupId.getText();
            info.dstPackage = txtPackage.getText();
            info.dstPkgPath = info.dstPackage.replace('.', '/');

            //
            for (String f : copyFiles) {
                message("复制:" + f);
                copyTree(info, new File(wings, f));
            }

        } catch (Exception e) {
            e.printStackTrace();
            message("出错了 " + e.getMessage());
            pgbGenerate.setString("出错了！");
            pgbGenerate.setIndeterminate(false);
        } finally {
            pgbGenerate.setString("完成了，进度条，逗你玩的");
        }
        message("制作完成");
    }

    private void message(String txt) {
        txaMessage.append(txt);
        txaMessage.append("\n");
    }

    private void copyTree(Info info, File src) throws IOException {
        if (src.isDirectory()) {
            for (File f : src.listFiles()) {
                copyTree(info, f);
            }
            return;
        }

        String name = src.getName();
        boolean isJava = false;
        byte[] bytes;
        if (name.equals("pom.xml")) {
            bytes = copyPomXml(info, src);
        } else if (name.endsWith(".java")) {
            bytes = copyJavas(info, src);
            isJava = true;
        } else {
            bytes = copyBytes(info, src);
        }

        String dstName = src.getAbsolutePath().replace(info.srcDir, "");
        if (isJava) {
            dstName = dstName.replace(info.srcPkgPath, info.dstPkgPath);
        }
        dstName = dstName.replace(info.srcApplication, info.dstApplication);
        File dstFile = new File(info.dstDir, dstName);
        File parent = dstFile.getParentFile();
        if (!parent.exists()) {
            parent.mkdirs();
        }

        if (bytes.length > 0) {
            FileOutputStream fos = new FileOutputStream(dstFile);
            fos.write(bytes);
            fos.flush();
            fos.close();
        } else {
            dstFile.createNewFile();
        }
    }

    private byte[] copyPomXml(Info info, File file) throws IOException {
        ByteArrayOutputStream ios = new ByteArrayOutputStream();
        Files.copy(file.toPath(), ios);
        String text = new String(ios.toByteArray(), StandardCharsets.UTF_8);
        int pos = text.indexOf("<dependency");
        if (pos > 0) {
            String head = text.substring(0, pos)
                              .replace(info.srcGroupId, info.dstGroupId)
                              .replace(info.srcArtifactId, info.dstArtifactId);
            String tail = text.substring(pos);
            text = head + tail;
        }

        return text.getBytes(StandardCharsets.UTF_8);
    }

    private byte[] copyJavas(Info info, File file) throws IOException {
        ByteArrayOutputStream ios = new ByteArrayOutputStream();
        Files.copy(file.toPath(), ios);
        String text = new String(ios.toByteArray(), StandardCharsets.UTF_8)
                .replace(info.srcPackage, info.dstPackage)
                .replace(info.srcApplication, info.dstApplication)
                .replace(info.srcArtifactId, info.dstArtifactId);
        return text.getBytes(StandardCharsets.UTF_8);
    }

    private byte[] copyBytes(Info info, File file) throws IOException {
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        Files.copy(file.toPath(), bos);
        return bos.toByteArray();
    }

    private static class Info {
        private String srcDir;
        private String srcApplication;
        private String srcArtifactId;
        private String srcGroupId;
        private String srcPackage;
        private String srcPkgPath;

        private String dstDir;
        private String dstApplication;
        private String dstArtifactId;
        private String dstGroupId;
        private String dstPackage;
        private String dstPkgPath;
    }
}
