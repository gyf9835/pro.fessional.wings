/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.warlock.database.autogen.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;
import pro.fessional.wings.warlock.database.autogen.tables.WinUserAnthnTable;
import pro.fessional.wings.warlock.database.autogen.tables.interfaces.IWinUserAnthn;
import pro.fessional.wings.warlock.enums.autogen.UserStatus;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.time.LocalDateTime;


/**
 * The table <code>wings_warlock.win_user_anthn</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4",
        "schema version:2020102401"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "win_user_anthn",
    uniqueConstraints = {
        @UniqueConstraint(name = "KEY_win_user_anthn_PRIMARY", columnNames = { "id" })
    }
)
public class WinUserAnthnRecord extends UpdatableRecordImpl<WinUserAnthnRecord> implements Record16<Long, LocalDateTime, LocalDateTime, LocalDateTime, Long, Long, String, String, String, String, String, String, String, LocalDateTime, Integer, UserStatus>, IWinUserAnthn {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>win_user_anthn.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>win_user_anthn.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>win_user_anthn.create_dt</code>.
     */
    @Override
    public void setCreateDt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>win_user_anthn.create_dt</code>.
     */
    @Column(name = "create_dt", nullable = false, precision = 3)
    @Override
    public LocalDateTime getCreateDt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>win_user_anthn.modify_dt</code>.
     */
    @Override
    public void setModifyDt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>win_user_anthn.modify_dt</code>.
     */
    @Column(name = "modify_dt", nullable = false, precision = 3)
    @Override
    public LocalDateTime getModifyDt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>win_user_anthn.delete_dt</code>.
     */
    @Override
    public void setDeleteDt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>win_user_anthn.delete_dt</code>.
     */
    @Column(name = "delete_dt", nullable = false, precision = 3)
    @Override
    public LocalDateTime getDeleteDt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>win_user_anthn.commit_id</code>.
     */
    @Override
    public void setCommitId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>win_user_anthn.commit_id</code>.
     */
    @Column(name = "commit_id", nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getCommitId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>win_user_anthn.user_id</code>.
     */
    @Override
    public void setUserId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>win_user_anthn.user_id</code>.
     */
    @Column(name = "user_id", nullable = false, precision = 19)
    @Override
    public Long getUserId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>win_user_anthn.auth_type</code>.
     */
    @Override
    public void setAuthType(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>win_user_anthn.auth_type</code>.
     */
    @Column(name = "auth_type", nullable = false, length = 10)
    @NotNull
    @Size(max = 10)
    @Override
    public String getAuthType() {
        return (String) get(6);
    }

    /**
     * Setter for <code>win_user_anthn.auth_name</code>.
     */
    @Override
    public void setAuthName(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>win_user_anthn.auth_name</code>.
     */
    @Column(name = "auth_name", nullable = false, length = 200)
    @NotNull
    @Size(max = 200)
    @Override
    public String getAuthName() {
        return (String) get(7);
    }

    /**
     * Setter for <code>win_user_anthn.auth_pass</code>.
     */
    @Override
    public void setAuthPass(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>win_user_anthn.auth_pass</code>.
     */
    @Column(name = "auth_pass", nullable = false, length = 200)
    @Size(max = 200)
    @Override
    public String getAuthPass() {
        return (String) get(8);
    }

    /**
     * Setter for <code>win_user_anthn.auth_salt</code>.
     */
    @Override
    public void setAuthSalt(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>win_user_anthn.auth_salt</code>.
     */
    @Column(name = "auth_salt", nullable = false, length = 50)
    @Size(max = 50)
    @Override
    public String getAuthSalt() {
        return (String) get(9);
    }

    /**
     * Setter for <code>win_user_anthn.auth_para1</code>.
     */
    @Override
    public void setAuthPara1(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>win_user_anthn.auth_para1</code>.
     */
    @Column(name = "auth_para1", nullable = false, length = 200)
    @Size(max = 200)
    @Override
    public String getAuthPara1() {
        return (String) get(10);
    }

    /**
     * Setter for <code>win_user_anthn.auth_para2</code>.
     */
    @Override
    public void setAuthPara2(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>win_user_anthn.auth_para2</code>.
     */
    @Column(name = "auth_para2", nullable = false, length = 200)
    @Size(max = 200)
    @Override
    public String getAuthPara2() {
        return (String) get(11);
    }

    /**
     * Setter for <code>win_user_anthn.auth_token</code>.
     */
    @Override
    public void setAuthToken(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>win_user_anthn.auth_token</code>.
     */
    @Column(name = "auth_token", nullable = false, length = 2000)
    @Size(max = 2000)
    @Override
    public String getAuthToken() {
        return (String) get(12);
    }

    /**
     * Setter for <code>win_user_anthn.expired_dt</code>.
     */
    @Override
    public void setExpiredDt(LocalDateTime value) {
        set(13, value);
    }

    /**
     * Getter for <code>win_user_anthn.expired_dt</code>.
     */
    @Column(name = "expired_dt", nullable = false, precision = 3)
    @Override
    public LocalDateTime getExpiredDt() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>win_user_anthn.error_cnt</code>.
     */
    @Override
    public void setErrorCnt(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>win_user_anthn.error_cnt</code>.
     */
    @Column(name = "error_cnt", nullable = false, precision = 10)
    @Override
    public Integer getErrorCnt() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>win_user_anthn.status</code>.
     */
    @Override
    public void setStatus(UserStatus value) {
        set(15, value);
    }

    /**
     * Getter for <code>win_user_anthn.status</code>.
     */
    @Column(name = "status", nullable = false, precision = 10)
    @Override
    public UserStatus getStatus() {
        return (UserStatus) get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row16<Long, LocalDateTime, LocalDateTime, LocalDateTime, Long, Long, String, String, String, String, String, String, String, LocalDateTime, Integer, UserStatus> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    @Override
    public Row16<Long, LocalDateTime, LocalDateTime, LocalDateTime, Long, Long, String, String, String, String, String, String, String, LocalDateTime, Integer, UserStatus> valuesRow() {
        return (Row16) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return WinUserAnthnTable.WinUserAnthn.Id;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return WinUserAnthnTable.WinUserAnthn.CreateDt;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return WinUserAnthnTable.WinUserAnthn.ModifyDt;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return WinUserAnthnTable.WinUserAnthn.DeleteDt;
    }

    @Override
    public Field<Long> field5() {
        return WinUserAnthnTable.WinUserAnthn.CommitId;
    }

    @Override
    public Field<Long> field6() {
        return WinUserAnthnTable.WinUserAnthn.UserId;
    }

    @Override
    public Field<String> field7() {
        return WinUserAnthnTable.WinUserAnthn.AuthType;
    }

    @Override
    public Field<String> field8() {
        return WinUserAnthnTable.WinUserAnthn.AuthName;
    }

    @Override
    public Field<String> field9() {
        return WinUserAnthnTable.WinUserAnthn.AuthPass;
    }

    @Override
    public Field<String> field10() {
        return WinUserAnthnTable.WinUserAnthn.AuthSalt;
    }

    @Override
    public Field<String> field11() {
        return WinUserAnthnTable.WinUserAnthn.AuthPara1;
    }

    @Override
    public Field<String> field12() {
        return WinUserAnthnTable.WinUserAnthn.AuthPara2;
    }

    @Override
    public Field<String> field13() {
        return WinUserAnthnTable.WinUserAnthn.AuthToken;
    }

    @Override
    public Field<LocalDateTime> field14() {
        return WinUserAnthnTable.WinUserAnthn.ExpiredDt;
    }

    @Override
    public Field<Integer> field15() {
        return WinUserAnthnTable.WinUserAnthn.ErrorCnt;
    }

    @Override
    public Field<UserStatus> field16() {
        return WinUserAnthnTable.WinUserAnthn.Status;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreateDt();
    }

    @Override
    public LocalDateTime component3() {
        return getModifyDt();
    }

    @Override
    public LocalDateTime component4() {
        return getDeleteDt();
    }

    @Override
    public Long component5() {
        return getCommitId();
    }

    @Override
    public Long component6() {
        return getUserId();
    }

    @Override
    public String component7() {
        return getAuthType();
    }

    @Override
    public String component8() {
        return getAuthName();
    }

    @Override
    public String component9() {
        return getAuthPass();
    }

    @Override
    public String component10() {
        return getAuthSalt();
    }

    @Override
    public String component11() {
        return getAuthPara1();
    }

    @Override
    public String component12() {
        return getAuthPara2();
    }

    @Override
    public String component13() {
        return getAuthToken();
    }

    @Override
    public LocalDateTime component14() {
        return getExpiredDt();
    }

    @Override
    public Integer component15() {
        return getErrorCnt();
    }

    @Override
    public UserStatus component16() {
        return getStatus();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreateDt();
    }

    @Override
    public LocalDateTime value3() {
        return getModifyDt();
    }

    @Override
    public LocalDateTime value4() {
        return getDeleteDt();
    }

    @Override
    public Long value5() {
        return getCommitId();
    }

    @Override
    public Long value6() {
        return getUserId();
    }

    @Override
    public String value7() {
        return getAuthType();
    }

    @Override
    public String value8() {
        return getAuthName();
    }

    @Override
    public String value9() {
        return getAuthPass();
    }

    @Override
    public String value10() {
        return getAuthSalt();
    }

    @Override
    public String value11() {
        return getAuthPara1();
    }

    @Override
    public String value12() {
        return getAuthPara2();
    }

    @Override
    public String value13() {
        return getAuthToken();
    }

    @Override
    public LocalDateTime value14() {
        return getExpiredDt();
    }

    @Override
    public Integer value15() {
        return getErrorCnt();
    }

    @Override
    public UserStatus value16() {
        return getStatus();
    }

    @Override
    public WinUserAnthnRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public WinUserAnthnRecord value2(LocalDateTime value) {
        setCreateDt(value);
        return this;
    }

    @Override
    public WinUserAnthnRecord value3(LocalDateTime value) {
        setModifyDt(value);
        return this;
    }

    @Override
    public WinUserAnthnRecord value4(LocalDateTime value) {
        setDeleteDt(value);
        return this;
    }

    @Override
    public WinUserAnthnRecord value5(Long value) {
        setCommitId(value);
        return this;
    }

    @Override
    public WinUserAnthnRecord value6(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public WinUserAnthnRecord value7(String value) {
        setAuthType(value);
        return this;
    }

    @Override
    public WinUserAnthnRecord value8(String value) {
        setAuthName(value);
        return this;
    }

    @Override
    public WinUserAnthnRecord value9(String value) {
        setAuthPass(value);
        return this;
    }

    @Override
    public WinUserAnthnRecord value10(String value) {
        setAuthSalt(value);
        return this;
    }

    @Override
    public WinUserAnthnRecord value11(String value) {
        setAuthPara1(value);
        return this;
    }

    @Override
    public WinUserAnthnRecord value12(String value) {
        setAuthPara2(value);
        return this;
    }

    @Override
    public WinUserAnthnRecord value13(String value) {
        setAuthToken(value);
        return this;
    }

    @Override
    public WinUserAnthnRecord value14(LocalDateTime value) {
        setExpiredDt(value);
        return this;
    }

    @Override
    public WinUserAnthnRecord value15(Integer value) {
        setErrorCnt(value);
        return this;
    }

    @Override
    public WinUserAnthnRecord value16(UserStatus value) {
        setStatus(value);
        return this;
    }

    @Override
    public WinUserAnthnRecord values(Long value1, LocalDateTime value2, LocalDateTime value3, LocalDateTime value4, Long value5, Long value6, String value7, String value8, String value9, String value10, String value11, String value12, String value13, LocalDateTime value14, Integer value15, UserStatus value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IWinUserAnthn from) {
        setId(from.getId());
        setCreateDt(from.getCreateDt());
        setModifyDt(from.getModifyDt());
        setDeleteDt(from.getDeleteDt());
        setCommitId(from.getCommitId());
        setUserId(from.getUserId());
        setAuthType(from.getAuthType());
        setAuthName(from.getAuthName());
        setAuthPass(from.getAuthPass());
        setAuthSalt(from.getAuthSalt());
        setAuthPara1(from.getAuthPara1());
        setAuthPara2(from.getAuthPara2());
        setAuthToken(from.getAuthToken());
        setExpiredDt(from.getExpiredDt());
        setErrorCnt(from.getErrorCnt());
        setStatus(from.getStatus());
    }

    @Override
    public <E extends IWinUserAnthn> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WinUserAnthnRecord
     */
    public WinUserAnthnRecord() {
        super(WinUserAnthnTable.WinUserAnthn);
    }

    /**
     * Create a detached, initialised WinUserAnthnRecord
     */
    public WinUserAnthnRecord(Long id, LocalDateTime createDt, LocalDateTime modifyDt, LocalDateTime deleteDt, Long commitId, Long userId, String authType, String authName, String authPass, String authSalt, String authPara1, String authPara2, String authToken, LocalDateTime expiredDt, Integer errorCnt, UserStatus status) {
        super(WinUserAnthnTable.WinUserAnthn);

        setId(id);
        setCreateDt(createDt);
        setModifyDt(modifyDt);
        setDeleteDt(deleteDt);
        setCommitId(commitId);
        setUserId(userId);
        setAuthType(authType);
        setAuthName(authName);
        setAuthPass(authPass);
        setAuthSalt(authSalt);
        setAuthPara1(authPara1);
        setAuthPara2(authPara2);
        setAuthToken(authToken);
        setExpiredDt(expiredDt);
        setErrorCnt(errorCnt);
        setStatus(status);
    }
}
