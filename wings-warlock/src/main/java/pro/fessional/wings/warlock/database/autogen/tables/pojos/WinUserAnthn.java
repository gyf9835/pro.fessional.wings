/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.warlock.database.autogen.tables.pojos;


import pro.fessional.wings.warlock.database.autogen.tables.interfaces.IWinUserAnthn;
import pro.fessional.wings.warlock.enums.autogen.UserStatus;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.time.LocalDateTime;


/**
 * The table <code>wings_warlock.win_user_anthn</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4",
        "schema version:2020102401"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "win_user_anthn",
    uniqueConstraints = {
        @UniqueConstraint(name = "KEY_win_user_anthn_PRIMARY", columnNames = { "id" })
    }
)
public class WinUserAnthn implements IWinUserAnthn {

    private static final long serialVersionUID = 1L;

    private Long          id;
    private LocalDateTime createDt;
    private LocalDateTime modifyDt;
    private LocalDateTime deleteDt;
    private Long          commitId;
    private Long          userId;
    private String        authType;
    private String        authName;
    private String        authPass;
    private String        authSalt;
    private String        authPara1;
    private String        authPara2;
    private String        authToken;
    private LocalDateTime expiredDt;
    private Integer       errorCnt;
    private UserStatus    status;

    public WinUserAnthn() {}

    public WinUserAnthn(IWinUserAnthn value) {
        this.id = value.getId();
        this.createDt = value.getCreateDt();
        this.modifyDt = value.getModifyDt();
        this.deleteDt = value.getDeleteDt();
        this.commitId = value.getCommitId();
        this.userId = value.getUserId();
        this.authType = value.getAuthType();
        this.authName = value.getAuthName();
        this.authPass = value.getAuthPass();
        this.authSalt = value.getAuthSalt();
        this.authPara1 = value.getAuthPara1();
        this.authPara2 = value.getAuthPara2();
        this.authToken = value.getAuthToken();
        this.expiredDt = value.getExpiredDt();
        this.errorCnt = value.getErrorCnt();
        this.status = value.getStatus();
    }

    public WinUserAnthn(
        Long          id,
        LocalDateTime createDt,
        LocalDateTime modifyDt,
        LocalDateTime deleteDt,
        Long          commitId,
        Long          userId,
        String        authType,
        String        authName,
        String        authPass,
        String        authSalt,
        String        authPara1,
        String        authPara2,
        String        authToken,
        LocalDateTime expiredDt,
        Integer       errorCnt,
        UserStatus    status
    ) {
        this.id = id;
        this.createDt = createDt;
        this.modifyDt = modifyDt;
        this.deleteDt = deleteDt;
        this.commitId = commitId;
        this.userId = userId;
        this.authType = authType;
        this.authName = authName;
        this.authPass = authPass;
        this.authSalt = authSalt;
        this.authPara1 = authPara1;
        this.authPara2 = authPara2;
        this.authToken = authToken;
        this.expiredDt = expiredDt;
        this.errorCnt = errorCnt;
        this.status = status;
    }

    /**
     * Getter for <code>win_user_anthn.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>win_user_anthn.id</code>.
     */
    @Override
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>win_user_anthn.create_dt</code>.
     */
    @Column(name = "create_dt", nullable = false, precision = 3)
    @Override
    public LocalDateTime getCreateDt() {
        return this.createDt;
    }

    /**
     * Setter for <code>win_user_anthn.create_dt</code>.
     */
    @Override
    public void setCreateDt(LocalDateTime createDt) {
        this.createDt = createDt;
    }

    /**
     * Getter for <code>win_user_anthn.modify_dt</code>.
     */
    @Column(name = "modify_dt", nullable = false, precision = 3)
    @Override
    public LocalDateTime getModifyDt() {
        return this.modifyDt;
    }

    /**
     * Setter for <code>win_user_anthn.modify_dt</code>.
     */
    @Override
    public void setModifyDt(LocalDateTime modifyDt) {
        this.modifyDt = modifyDt;
    }

    /**
     * Getter for <code>win_user_anthn.delete_dt</code>.
     */
    @Column(name = "delete_dt", nullable = false, precision = 3)
    @Override
    public LocalDateTime getDeleteDt() {
        return this.deleteDt;
    }

    /**
     * Setter for <code>win_user_anthn.delete_dt</code>.
     */
    @Override
    public void setDeleteDt(LocalDateTime deleteDt) {
        this.deleteDt = deleteDt;
    }

    /**
     * Getter for <code>win_user_anthn.commit_id</code>.
     */
    @Column(name = "commit_id", nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getCommitId() {
        return this.commitId;
    }

    /**
     * Setter for <code>win_user_anthn.commit_id</code>.
     */
    @Override
    public void setCommitId(Long commitId) {
        this.commitId = commitId;
    }

    /**
     * Getter for <code>win_user_anthn.user_id</code>.
     */
    @Column(name = "user_id", nullable = false, precision = 19)
    @Override
    public Long getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>win_user_anthn.user_id</code>.
     */
    @Override
    public void setUserId(Long userId) {
        this.userId = userId;
    }

    /**
     * Getter for <code>win_user_anthn.auth_type</code>.
     */
    @Column(name = "auth_type", nullable = false, length = 10)
    @NotNull
    @Size(max = 10)
    @Override
    public String getAuthType() {
        return this.authType;
    }

    /**
     * Setter for <code>win_user_anthn.auth_type</code>.
     */
    @Override
    public void setAuthType(String authType) {
        this.authType = authType;
    }

    /**
     * Getter for <code>win_user_anthn.auth_name</code>.
     */
    @Column(name = "auth_name", nullable = false, length = 200)
    @NotNull
    @Size(max = 200)
    @Override
    public String getAuthName() {
        return this.authName;
    }

    /**
     * Setter for <code>win_user_anthn.auth_name</code>.
     */
    @Override
    public void setAuthName(String authName) {
        this.authName = authName;
    }

    /**
     * Getter for <code>win_user_anthn.auth_pass</code>.
     */
    @Column(name = "auth_pass", nullable = false, length = 200)
    @Size(max = 200)
    @Override
    public String getAuthPass() {
        return this.authPass;
    }

    /**
     * Setter for <code>win_user_anthn.auth_pass</code>.
     */
    @Override
    public void setAuthPass(String authPass) {
        this.authPass = authPass;
    }

    /**
     * Getter for <code>win_user_anthn.auth_salt</code>.
     */
    @Column(name = "auth_salt", nullable = false, length = 50)
    @Size(max = 50)
    @Override
    public String getAuthSalt() {
        return this.authSalt;
    }

    /**
     * Setter for <code>win_user_anthn.auth_salt</code>.
     */
    @Override
    public void setAuthSalt(String authSalt) {
        this.authSalt = authSalt;
    }

    /**
     * Getter for <code>win_user_anthn.auth_para1</code>.
     */
    @Column(name = "auth_para1", nullable = false, length = 200)
    @Size(max = 200)
    @Override
    public String getAuthPara1() {
        return this.authPara1;
    }

    /**
     * Setter for <code>win_user_anthn.auth_para1</code>.
     */
    @Override
    public void setAuthPara1(String authPara1) {
        this.authPara1 = authPara1;
    }

    /**
     * Getter for <code>win_user_anthn.auth_para2</code>.
     */
    @Column(name = "auth_para2", nullable = false, length = 200)
    @Size(max = 200)
    @Override
    public String getAuthPara2() {
        return this.authPara2;
    }

    /**
     * Setter for <code>win_user_anthn.auth_para2</code>.
     */
    @Override
    public void setAuthPara2(String authPara2) {
        this.authPara2 = authPara2;
    }

    /**
     * Getter for <code>win_user_anthn.auth_token</code>.
     */
    @Column(name = "auth_token", nullable = false, length = 2000)
    @Size(max = 2000)
    @Override
    public String getAuthToken() {
        return this.authToken;
    }

    /**
     * Setter for <code>win_user_anthn.auth_token</code>.
     */
    @Override
    public void setAuthToken(String authToken) {
        this.authToken = authToken;
    }

    /**
     * Getter for <code>win_user_anthn.expired_dt</code>.
     */
    @Column(name = "expired_dt", nullable = false, precision = 3)
    @Override
    public LocalDateTime getExpiredDt() {
        return this.expiredDt;
    }

    /**
     * Setter for <code>win_user_anthn.expired_dt</code>.
     */
    @Override
    public void setExpiredDt(LocalDateTime expiredDt) {
        this.expiredDt = expiredDt;
    }

    /**
     * Getter for <code>win_user_anthn.error_cnt</code>.
     */
    @Column(name = "error_cnt", nullable = false, precision = 10)
    @Override
    public Integer getErrorCnt() {
        return this.errorCnt;
    }

    /**
     * Setter for <code>win_user_anthn.error_cnt</code>.
     */
    @Override
    public void setErrorCnt(Integer errorCnt) {
        this.errorCnt = errorCnt;
    }

    /**
     * Getter for <code>win_user_anthn.status</code>.
     */
    @Column(name = "status", nullable = false, precision = 10)
    @Override
    public UserStatus getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>win_user_anthn.status</code>.
     */
    @Override
    public void setStatus(UserStatus status) {
        this.status = status;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final WinUserAnthn other = (WinUserAnthn) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (createDt == null) {
            if (other.createDt != null)
                return false;
        }
        else if (!createDt.equals(other.createDt))
            return false;
        if (modifyDt == null) {
            if (other.modifyDt != null)
                return false;
        }
        else if (!modifyDt.equals(other.modifyDt))
            return false;
        if (deleteDt == null) {
            if (other.deleteDt != null)
                return false;
        }
        else if (!deleteDt.equals(other.deleteDt))
            return false;
        if (commitId == null) {
            if (other.commitId != null)
                return false;
        }
        else if (!commitId.equals(other.commitId))
            return false;
        if (userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!userId.equals(other.userId))
            return false;
        if (authType == null) {
            if (other.authType != null)
                return false;
        }
        else if (!authType.equals(other.authType))
            return false;
        if (authName == null) {
            if (other.authName != null)
                return false;
        }
        else if (!authName.equals(other.authName))
            return false;
        if (authPass == null) {
            if (other.authPass != null)
                return false;
        }
        else if (!authPass.equals(other.authPass))
            return false;
        if (authSalt == null) {
            if (other.authSalt != null)
                return false;
        }
        else if (!authSalt.equals(other.authSalt))
            return false;
        if (authPara1 == null) {
            if (other.authPara1 != null)
                return false;
        }
        else if (!authPara1.equals(other.authPara1))
            return false;
        if (authPara2 == null) {
            if (other.authPara2 != null)
                return false;
        }
        else if (!authPara2.equals(other.authPara2))
            return false;
        if (authToken == null) {
            if (other.authToken != null)
                return false;
        }
        else if (!authToken.equals(other.authToken))
            return false;
        if (expiredDt == null) {
            if (other.expiredDt != null)
                return false;
        }
        else if (!expiredDt.equals(other.expiredDt))
            return false;
        if (errorCnt == null) {
            if (other.errorCnt != null)
                return false;
        }
        else if (!errorCnt.equals(other.errorCnt))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createDt == null) ? 0 : this.createDt.hashCode());
        result = prime * result + ((this.modifyDt == null) ? 0 : this.modifyDt.hashCode());
        result = prime * result + ((this.deleteDt == null) ? 0 : this.deleteDt.hashCode());
        result = prime * result + ((this.commitId == null) ? 0 : this.commitId.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.authType == null) ? 0 : this.authType.hashCode());
        result = prime * result + ((this.authName == null) ? 0 : this.authName.hashCode());
        result = prime * result + ((this.authPass == null) ? 0 : this.authPass.hashCode());
        result = prime * result + ((this.authSalt == null) ? 0 : this.authSalt.hashCode());
        result = prime * result + ((this.authPara1 == null) ? 0 : this.authPara1.hashCode());
        result = prime * result + ((this.authPara2 == null) ? 0 : this.authPara2.hashCode());
        result = prime * result + ((this.authToken == null) ? 0 : this.authToken.hashCode());
        result = prime * result + ((this.expiredDt == null) ? 0 : this.expiredDt.hashCode());
        result = prime * result + ((this.errorCnt == null) ? 0 : this.errorCnt.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("WinUserAnthn (");

        sb.append(id);
        sb.append(", ").append(createDt);
        sb.append(", ").append(modifyDt);
        sb.append(", ").append(deleteDt);
        sb.append(", ").append(commitId);
        sb.append(", ").append(userId);
        sb.append(", ").append(authType);
        sb.append(", ").append(authName);
        sb.append(", ").append(authPass);
        sb.append(", ").append(authSalt);
        sb.append(", ").append(authPara1);
        sb.append(", ").append(authPara2);
        sb.append(", ").append(authToken);
        sb.append(", ").append(expiredDt);
        sb.append(", ").append(errorCnt);
        sb.append(", ").append(status);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IWinUserAnthn from) {
        setId(from.getId());
        setCreateDt(from.getCreateDt());
        setModifyDt(from.getModifyDt());
        setDeleteDt(from.getDeleteDt());
        setCommitId(from.getCommitId());
        setUserId(from.getUserId());
        setAuthType(from.getAuthType());
        setAuthName(from.getAuthName());
        setAuthPass(from.getAuthPass());
        setAuthSalt(from.getAuthSalt());
        setAuthPara1(from.getAuthPara1());
        setAuthPara2(from.getAuthPara2());
        setAuthToken(from.getAuthToken());
        setExpiredDt(from.getExpiredDt());
        setErrorCnt(from.getErrorCnt());
        setStatus(from.getStatus());
    }

    @Override
    public <E extends IWinUserAnthn> E into(E into) {
        into.from(this);
        return into;
    }
}
