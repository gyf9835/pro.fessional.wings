/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.warlock.database.autogen.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;
import pro.fessional.wings.faceless.enums.autogen.StandardLanguage;
import pro.fessional.wings.faceless.enums.autogen.StandardTimezone;
import pro.fessional.wings.warlock.database.autogen.tables.WinUserBasicTable;
import pro.fessional.wings.warlock.database.autogen.tables.interfaces.IWinUserBasic;
import pro.fessional.wings.warlock.enums.autogen.UserGender;
import pro.fessional.wings.warlock.enums.autogen.UserStatus;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.time.LocalDateTime;


/**
 * The table <code>wings_warlock.win_user_basic</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4",
        "schema version:2020102401"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "win_user_basic",
    uniqueConstraints = {
        @UniqueConstraint(name = "KEY_win_user_basic_PRIMARY", columnNames = { "id" })
    }
)
public class WinUserBasicRecord extends UpdatableRecordImpl<WinUserBasicRecord> implements Record12<Long, LocalDateTime, LocalDateTime, LocalDateTime, Long, String, UserGender, String, StandardLanguage, StandardTimezone, String, UserStatus>, IWinUserBasic {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>win_user_basic.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>win_user_basic.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>win_user_basic.create_dt</code>.
     */
    @Override
    public void setCreateDt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>win_user_basic.create_dt</code>.
     */
    @Column(name = "create_dt", nullable = false, precision = 3)
    @Override
    public LocalDateTime getCreateDt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>win_user_basic.modify_dt</code>.
     */
    @Override
    public void setModifyDt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>win_user_basic.modify_dt</code>.
     */
    @Column(name = "modify_dt", nullable = false, precision = 3)
    @Override
    public LocalDateTime getModifyDt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>win_user_basic.delete_dt</code>.
     */
    @Override
    public void setDeleteDt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>win_user_basic.delete_dt</code>.
     */
    @Column(name = "delete_dt", nullable = false, precision = 3)
    @Override
    public LocalDateTime getDeleteDt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>win_user_basic.commit_id</code>.
     */
    @Override
    public void setCommitId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>win_user_basic.commit_id</code>.
     */
    @Column(name = "commit_id", nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getCommitId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>win_user_basic.nick_name</code>.
     */
    @Override
    public void setNickName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>win_user_basic.nick_name</code>.
     */
    @Column(name = "nick_name", nullable = false, length = 50)
    @Size(max = 50)
    @Override
    public String getNickName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>win_user_basic.gender</code>.
     */
    @Override
    public void setGender(UserGender value) {
        set(6, value);
    }

    /**
     * Getter for <code>win_user_basic.gender</code>.
     */
    @Column(name = "gender", nullable = false, precision = 10)
    @Override
    public UserGender getGender() {
        return (UserGender) get(6);
    }

    /**
     * Setter for <code>win_user_basic.avatar</code>.
     */
    @Override
    public void setAvatar(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>win_user_basic.avatar</code>.
     */
    @Column(name = "avatar", nullable = false, length = 200)
    @Size(max = 200)
    @Override
    public String getAvatar() {
        return (String) get(7);
    }

    /**
     * Setter for <code>win_user_basic.language</code>.
     */
    @Override
    public void setLanguage(StandardLanguage value) {
        set(8, value);
    }

    /**
     * Getter for <code>win_user_basic.language</code>.
     */
    @Column(name = "language", nullable = false, length = 5)
    @Override
    public StandardLanguage getLanguage() {
        return (StandardLanguage) get(8);
    }

    /**
     * Setter for <code>win_user_basic.timezone</code>.
     */
    @Override
    public void setTimezone(StandardTimezone value) {
        set(9, value);
    }

    /**
     * Getter for <code>win_user_basic.timezone</code>.
     */
    @Column(name = "timezone", nullable = false, precision = 10)
    @Override
    public StandardTimezone getTimezone() {
        return (StandardTimezone) get(9);
    }

    /**
     * Setter for <code>win_user_basic.remark</code>.
     */
    @Override
    public void setRemark(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>win_user_basic.remark</code>.
     */
    @Column(name = "remark", nullable = false, length = 500)
    @Size(max = 500)
    @Override
    public String getRemark() {
        return (String) get(10);
    }

    /**
     * Setter for <code>win_user_basic.status</code>.
     */
    @Override
    public void setStatus(UserStatus value) {
        set(11, value);
    }

    /**
     * Getter for <code>win_user_basic.status</code>.
     */
    @Column(name = "status", nullable = false, precision = 10)
    @Override
    public UserStatus getStatus() {
        return (UserStatus) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, LocalDateTime, LocalDateTime, LocalDateTime, Long, String, UserGender, String, StandardLanguage, StandardTimezone, String, UserStatus> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Long, LocalDateTime, LocalDateTime, LocalDateTime, Long, String, UserGender, String, StandardLanguage, StandardTimezone, String, UserStatus> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return WinUserBasicTable.WinUserBasic.Id;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return WinUserBasicTable.WinUserBasic.CreateDt;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return WinUserBasicTable.WinUserBasic.ModifyDt;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return WinUserBasicTable.WinUserBasic.DeleteDt;
    }

    @Override
    public Field<Long> field5() {
        return WinUserBasicTable.WinUserBasic.CommitId;
    }

    @Override
    public Field<String> field6() {
        return WinUserBasicTable.WinUserBasic.NickName;
    }

    @Override
    public Field<UserGender> field7() {
        return WinUserBasicTable.WinUserBasic.Gender;
    }

    @Override
    public Field<String> field8() {
        return WinUserBasicTable.WinUserBasic.Avatar;
    }

    @Override
    public Field<StandardLanguage> field9() {
        return WinUserBasicTable.WinUserBasic.Language;
    }

    @Override
    public Field<StandardTimezone> field10() {
        return WinUserBasicTable.WinUserBasic.Timezone;
    }

    @Override
    public Field<String> field11() {
        return WinUserBasicTable.WinUserBasic.Remark;
    }

    @Override
    public Field<UserStatus> field12() {
        return WinUserBasicTable.WinUserBasic.Status;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreateDt();
    }

    @Override
    public LocalDateTime component3() {
        return getModifyDt();
    }

    @Override
    public LocalDateTime component4() {
        return getDeleteDt();
    }

    @Override
    public Long component5() {
        return getCommitId();
    }

    @Override
    public String component6() {
        return getNickName();
    }

    @Override
    public UserGender component7() {
        return getGender();
    }

    @Override
    public String component8() {
        return getAvatar();
    }

    @Override
    public StandardLanguage component9() {
        return getLanguage();
    }

    @Override
    public StandardTimezone component10() {
        return getTimezone();
    }

    @Override
    public String component11() {
        return getRemark();
    }

    @Override
    public UserStatus component12() {
        return getStatus();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreateDt();
    }

    @Override
    public LocalDateTime value3() {
        return getModifyDt();
    }

    @Override
    public LocalDateTime value4() {
        return getDeleteDt();
    }

    @Override
    public Long value5() {
        return getCommitId();
    }

    @Override
    public String value6() {
        return getNickName();
    }

    @Override
    public UserGender value7() {
        return getGender();
    }

    @Override
    public String value8() {
        return getAvatar();
    }

    @Override
    public StandardLanguage value9() {
        return getLanguage();
    }

    @Override
    public StandardTimezone value10() {
        return getTimezone();
    }

    @Override
    public String value11() {
        return getRemark();
    }

    @Override
    public UserStatus value12() {
        return getStatus();
    }

    @Override
    public WinUserBasicRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public WinUserBasicRecord value2(LocalDateTime value) {
        setCreateDt(value);
        return this;
    }

    @Override
    public WinUserBasicRecord value3(LocalDateTime value) {
        setModifyDt(value);
        return this;
    }

    @Override
    public WinUserBasicRecord value4(LocalDateTime value) {
        setDeleteDt(value);
        return this;
    }

    @Override
    public WinUserBasicRecord value5(Long value) {
        setCommitId(value);
        return this;
    }

    @Override
    public WinUserBasicRecord value6(String value) {
        setNickName(value);
        return this;
    }

    @Override
    public WinUserBasicRecord value7(UserGender value) {
        setGender(value);
        return this;
    }

    @Override
    public WinUserBasicRecord value8(String value) {
        setAvatar(value);
        return this;
    }

    @Override
    public WinUserBasicRecord value9(StandardLanguage value) {
        setLanguage(value);
        return this;
    }

    @Override
    public WinUserBasicRecord value10(StandardTimezone value) {
        setTimezone(value);
        return this;
    }

    @Override
    public WinUserBasicRecord value11(String value) {
        setRemark(value);
        return this;
    }

    @Override
    public WinUserBasicRecord value12(UserStatus value) {
        setStatus(value);
        return this;
    }

    @Override
    public WinUserBasicRecord values(Long value1, LocalDateTime value2, LocalDateTime value3, LocalDateTime value4, Long value5, String value6, UserGender value7, String value8, StandardLanguage value9, StandardTimezone value10, String value11, UserStatus value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IWinUserBasic from) {
        setId(from.getId());
        setCreateDt(from.getCreateDt());
        setModifyDt(from.getModifyDt());
        setDeleteDt(from.getDeleteDt());
        setCommitId(from.getCommitId());
        setNickName(from.getNickName());
        setGender(from.getGender());
        setAvatar(from.getAvatar());
        setLanguage(from.getLanguage());
        setTimezone(from.getTimezone());
        setRemark(from.getRemark());
        setStatus(from.getStatus());
    }

    @Override
    public <E extends IWinUserBasic> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WinUserBasicRecord
     */
    public WinUserBasicRecord() {
        super(WinUserBasicTable.WinUserBasic);
    }

    /**
     * Create a detached, initialised WinUserBasicRecord
     */
    public WinUserBasicRecord(Long id, LocalDateTime createDt, LocalDateTime modifyDt, LocalDateTime deleteDt, Long commitId, String nickName, UserGender gender, String avatar, StandardLanguage language, StandardTimezone timezone, String remark, UserStatus status) {
        super(WinUserBasicTable.WinUserBasic);

        setId(id);
        setCreateDt(createDt);
        setModifyDt(modifyDt);
        setDeleteDt(deleteDt);
        setCommitId(commitId);
        setNickName(nickName);
        setGender(gender);
        setAvatar(avatar);
        setLanguage(language);
        setTimezone(timezone);
        setRemark(remark);
        setStatus(status);
    }
}
