/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.warlock.database.autogen.tables.daos;


import org.jooq.Configuration;
import org.jooq.Record2;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import pro.fessional.wings.faceless.database.jooq.WingsJooqDaoJournalImpl;
import pro.fessional.wings.warlock.database.autogen.tables.WinRolePermMapTable;
import pro.fessional.wings.warlock.database.autogen.tables.pojos.WinRolePermMap;
import pro.fessional.wings.warlock.database.autogen.tables.records.WinRolePermMapRecord;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.List;


/**
 * The table <code>wings_warlock.win_role_perm_map</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4",
        "schema version:2020102402"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class WinRolePermMapDao extends WingsJooqDaoJournalImpl<WinRolePermMapTable, WinRolePermMapRecord, WinRolePermMap, Record2<Long, Long>> {

    /**
     * Create a new WinRolePermMapDao without any configuration
     */
    public WinRolePermMapDao() {
        super(WinRolePermMapTable.WinRolePermMap, WinRolePermMap.class);
    }

    /**
     * Create a new WinRolePermMapDao with an attached configuration
     */
    @Autowired
    public WinRolePermMapDao(Configuration configuration) {
        super(WinRolePermMapTable.WinRolePermMap, WinRolePermMap.class, configuration);
    }

    @Override
    public Record2<Long, Long> getId(WinRolePermMap object) {
        return compositeKeyRecord(object.getReferRole(), object.getGrantPerm());
    }

    /**
     * Fetch records that have <code>refer_role BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WinRolePermMap> fetchRangeOfReferRole(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(WinRolePermMapTable.WinRolePermMap.ReferRole, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>refer_role IN (values)</code>
     */
    public List<WinRolePermMap> fetchByReferRole(Long... values) {
        return fetch(WinRolePermMapTable.WinRolePermMap.ReferRole, values);
    }

    /**
     * Fetch records that have <code>grant_perm BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WinRolePermMap> fetchRangeOfGrantPerm(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(WinRolePermMapTable.WinRolePermMap.GrantPerm, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>grant_perm IN (values)</code>
     */
    public List<WinRolePermMap> fetchByGrantPerm(Long... values) {
        return fetch(WinRolePermMapTable.WinRolePermMap.GrantPerm, values);
    }

    /**
     * Fetch records that have <code>create_dt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WinRolePermMap> fetchRangeOfCreateDt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(WinRolePermMapTable.WinRolePermMap.CreateDt, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_dt IN (values)</code>
     */
    public List<WinRolePermMap> fetchByCreateDt(LocalDateTime... values) {
        return fetch(WinRolePermMapTable.WinRolePermMap.CreateDt, values);
    }

    /**
     * Fetch records that have <code>modify_dt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WinRolePermMap> fetchRangeOfModifyDt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(WinRolePermMapTable.WinRolePermMap.ModifyDt, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modify_dt IN (values)</code>
     */
    public List<WinRolePermMap> fetchByModifyDt(LocalDateTime... values) {
        return fetch(WinRolePermMapTable.WinRolePermMap.ModifyDt, values);
    }

    /**
     * Fetch records that have <code>delete_dt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WinRolePermMap> fetchRangeOfDeleteDt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(WinRolePermMapTable.WinRolePermMap.DeleteDt, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>delete_dt IN (values)</code>
     */
    public List<WinRolePermMap> fetchByDeleteDt(LocalDateTime... values) {
        return fetch(WinRolePermMapTable.WinRolePermMap.DeleteDt, values);
    }

    /**
     * Fetch records that have <code>commit_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WinRolePermMap> fetchRangeOfCommitId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(WinRolePermMapTable.WinRolePermMap.CommitId, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>commit_id IN (values)</code>
     */
    public List<WinRolePermMap> fetchByCommitId(Long... values) {
        return fetch(WinRolePermMapTable.WinRolePermMap.CommitId, values);
    }


    /**
     * Fetch records that have <code>refer_role BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WinRolePermMap> fetchRangeOfReferRoleLive(Long lowerInclusive, Long upperInclusive) {
        return fetchRangeLive(WinRolePermMapTable.WinRolePermMap.ReferRole, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>refer_role IN (values)</code>
     */
    public List<WinRolePermMap> fetchByReferRoleLive(Long... values) {
        return fetchLive(WinRolePermMapTable.WinRolePermMap.ReferRole, values);
    }

    /**
     * Fetch records that have <code>grant_perm BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WinRolePermMap> fetchRangeOfGrantPermLive(Long lowerInclusive, Long upperInclusive) {
        return fetchRangeLive(WinRolePermMapTable.WinRolePermMap.GrantPerm, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>grant_perm IN (values)</code>
     */
    public List<WinRolePermMap> fetchByGrantPermLive(Long... values) {
        return fetchLive(WinRolePermMapTable.WinRolePermMap.GrantPerm, values);
    }

    /**
     * Fetch records that have <code>create_dt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WinRolePermMap> fetchRangeOfCreateDtLive(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRangeLive(WinRolePermMapTable.WinRolePermMap.CreateDt, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_dt IN (values)</code>
     */
    public List<WinRolePermMap> fetchByCreateDtLive(LocalDateTime... values) {
        return fetchLive(WinRolePermMapTable.WinRolePermMap.CreateDt, values);
    }

    /**
     * Fetch records that have <code>modify_dt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WinRolePermMap> fetchRangeOfModifyDtLive(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRangeLive(WinRolePermMapTable.WinRolePermMap.ModifyDt, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modify_dt IN (values)</code>
     */
    public List<WinRolePermMap> fetchByModifyDtLive(LocalDateTime... values) {
        return fetchLive(WinRolePermMapTable.WinRolePermMap.ModifyDt, values);
    }

    /**
     * Fetch records that have <code>delete_dt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WinRolePermMap> fetchRangeOfDeleteDtLive(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRangeLive(WinRolePermMapTable.WinRolePermMap.DeleteDt, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>delete_dt IN (values)</code>
     */
    public List<WinRolePermMap> fetchByDeleteDtLive(LocalDateTime... values) {
        return fetchLive(WinRolePermMapTable.WinRolePermMap.DeleteDt, values);
    }

    /**
     * Fetch records that have <code>commit_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<WinRolePermMap> fetchRangeOfCommitIdLive(Long lowerInclusive, Long upperInclusive) {
        return fetchRangeLive(WinRolePermMapTable.WinRolePermMap.CommitId, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>commit_id IN (values)</code>
     */
    public List<WinRolePermMap> fetchByCommitIdLive(Long... values) {
        return fetchLive(WinRolePermMapTable.WinRolePermMap.CommitId, values);
    }
}
