# 未登录时跳转的页面，需要有controller处理
wings.warlock.security.login-page=/auth/login-page.json

# 处理登录的URL，由filter处理，不需要controller
wings.warlock.security.login-url=/auth/*/login.json
# 登出地址，由filter处理，不需要controller
wings.warlock.security.logout-url=/auth/logout.json

# username Parameter
wings.warlock.security.username-para=username
# password Parameter
wings.warlock.security.password-para=password

# 需要任意权限的路径，antMatcher，逗号分隔，斜杠换行
wings.warlock.security.authority[TYPE_ADMIN]=/admin/**

# 需要登录的路径，antMatcher，逗号分隔，斜杠换行
wings.warlock.security.authenticated=/user/**

# 无权限路径，antMatcher，逗号分隔，斜杠换行
wings.warlock.security.permit-all=/auth/**

# 支持的验证类型， enum全路径，一对一，否则反向解析有问题
wings.warlock.security.auth-type.user=pro.fessional.wings.warlock.security.enums.WingsAuthType#USER_NAME
wings.warlock.security.auth-type.sms=pro.fessional.wings.warlock.security.enums.WingsAuthType#MOBILE_SMS
wings.warlock.security.auth-type.code=pro.fessional.wings.warlock.security.enums.WingsAuthType#SUPER_CODE
wings.warlock.security.auth-type.github=me.zhyd.oauth.config.AuthDefaultSource#GITHUB
wings.warlock.security.auth-type.weibo=me.zhyd.oauth.config.AuthDefaultSource#WEIBO
