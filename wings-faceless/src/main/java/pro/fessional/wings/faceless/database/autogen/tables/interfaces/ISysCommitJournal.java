/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.faceless.database.autogen.tables.interfaces;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import pro.fessional.wings.faceless.service.journal.JournalAware;


/**
 * The table <code>wings_0.sys_commit_journal</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1",
        "schema version:2019052001"
    },
    date = "2019-10-20T07:53:43.079Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "sys_commit_journal", uniqueConstraints = {
    @UniqueConstraint(name = "KEY_sys_commit_journal_PRIMARY", columnNames = {"id"})
})
public interface ISysCommitJournal extends JournalAware, Serializable {

    /**
     * Setter for <code>sys_commit_journal.id</code>.
     */
    public void setId(Long value);

    /**
     * Getter for <code>sys_commit_journal.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, precision = 19)
    @NotNull
    public Long getId();

    /**
     * Setter for <code>sys_commit_journal.create_dt</code>.
     */
    public void setCreateDt(LocalDateTime value);

    /**
     * Getter for <code>sys_commit_journal.create_dt</code>.
     */
    @Column(name = "create_dt", nullable = false)
    public LocalDateTime getCreateDt();

    /**
     * Setter for <code>sys_commit_journal.event_name</code>.
     */
    public void setEventName(String value);

    /**
     * Getter for <code>sys_commit_journal.event_name</code>.
     */
    @Column(name = "event_name", nullable = false, length = 200)
    @NotNull
    @Size(max = 200)
    public String getEventName();

    /**
     * Setter for <code>sys_commit_journal.target_key</code>.
     */
    public void setTargetKey(String value);

    /**
     * Getter for <code>sys_commit_journal.target_key</code>.
     */
    @Column(name = "target_key", nullable = false, length = 200)
    @Size(max = 200)
    public String getTargetKey();

    /**
     * Setter for <code>sys_commit_journal.login_info</code>.
     */
    public void setLoginInfo(String value);

    /**
     * Getter for <code>sys_commit_journal.login_info</code>.
     */
    @Column(name = "login_info", length = 65535)
    @Size(max = 65535)
    public String getLoginInfo();

    /**
     * Setter for <code>sys_commit_journal.other_info</code>.
     */
    public void setOtherInfo(String value);

    /**
     * Getter for <code>sys_commit_journal.other_info</code>.
     */
    @Column(name = "other_info", length = 65535)
    @Size(max = 65535)
    public String getOtherInfo();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface ISysCommitJournal
     */
    public void from(pro.fessional.wings.faceless.database.autogen.tables.interfaces.ISysCommitJournal from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface ISysCommitJournal
     */
    public <E extends pro.fessional.wings.faceless.database.autogen.tables.interfaces.ISysCommitJournal> E into(E into);
}
