/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.faceless.database.autogen.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import pro.fessional.wings.faceless.database.autogen.tables.SysCommitJournalTable;
import pro.fessional.wings.faceless.database.autogen.tables.interfaces.ISysCommitJournal;


/**
 * The table <code>wings.sys_commit_journal</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1",
        "schema version:2019052101"
    },
    date = "2020-02-28T10:23:10.028Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "sys_commit_journal", uniqueConstraints = {
    @UniqueConstraint(name = "KEY_sys_commit_journal_PRIMARY", columnNames = {"id"})
})
public class SysCommitJournalRecord extends UpdatableRecordImpl<SysCommitJournalRecord> implements Record6<Long, LocalDateTime, String, String, String, String>, ISysCommitJournal {

    private static final long serialVersionUID = -298810775;

    /**
     * Setter for <code>sys_commit_journal.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>sys_commit_journal.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>sys_commit_journal.create_dt</code>.
     */
    @Override
    public void setCreateDt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>sys_commit_journal.create_dt</code>.
     */
    @Column(name = "create_dt", nullable = false)
    @Override
    public LocalDateTime getCreateDt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>sys_commit_journal.event_name</code>.
     */
    @Override
    public void setEventName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>sys_commit_journal.event_name</code>.
     */
    @Column(name = "event_name", nullable = false, length = 200)
    @NotNull
    @Size(max = 200)
    @Override
    public String getEventName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sys_commit_journal.target_key</code>.
     */
    @Override
    public void setTargetKey(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>sys_commit_journal.target_key</code>.
     */
    @Column(name = "target_key", nullable = false, length = 200)
    @Size(max = 200)
    @Override
    public String getTargetKey() {
        return (String) get(3);
    }

    /**
     * Setter for <code>sys_commit_journal.login_info</code>.
     */
    @Override
    public void setLoginInfo(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>sys_commit_journal.login_info</code>.
     */
    @Column(name = "login_info", length = 65535)
    @Size(max = 65535)
    @Override
    public String getLoginInfo() {
        return (String) get(4);
    }

    /**
     * Setter for <code>sys_commit_journal.other_info</code>.
     */
    @Override
    public void setOtherInfo(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>sys_commit_journal.other_info</code>.
     */
    @Column(name = "other_info", length = 65535)
    @Size(max = 65535)
    @Override
    public String getOtherInfo() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, LocalDateTime, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, LocalDateTime, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return SysCommitJournalTable.SysCommitJournal.Id;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return SysCommitJournalTable.SysCommitJournal.CreateDt;
    }

    @Override
    public Field<String> field3() {
        return SysCommitJournalTable.SysCommitJournal.EventName;
    }

    @Override
    public Field<String> field4() {
        return SysCommitJournalTable.SysCommitJournal.TargetKey;
    }

    @Override
    public Field<String> field5() {
        return SysCommitJournalTable.SysCommitJournal.LoginInfo;
    }

    @Override
    public Field<String> field6() {
        return SysCommitJournalTable.SysCommitJournal.OtherInfo;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreateDt();
    }

    @Override
    public String component3() {
        return getEventName();
    }

    @Override
    public String component4() {
        return getTargetKey();
    }

    @Override
    public String component5() {
        return getLoginInfo();
    }

    @Override
    public String component6() {
        return getOtherInfo();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreateDt();
    }

    @Override
    public String value3() {
        return getEventName();
    }

    @Override
    public String value4() {
        return getTargetKey();
    }

    @Override
    public String value5() {
        return getLoginInfo();
    }

    @Override
    public String value6() {
        return getOtherInfo();
    }

    @Override
    public SysCommitJournalRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SysCommitJournalRecord value2(LocalDateTime value) {
        setCreateDt(value);
        return this;
    }

    @Override
    public SysCommitJournalRecord value3(String value) {
        setEventName(value);
        return this;
    }

    @Override
    public SysCommitJournalRecord value4(String value) {
        setTargetKey(value);
        return this;
    }

    @Override
    public SysCommitJournalRecord value5(String value) {
        setLoginInfo(value);
        return this;
    }

    @Override
    public SysCommitJournalRecord value6(String value) {
        setOtherInfo(value);
        return this;
    }

    @Override
    public SysCommitJournalRecord values(Long value1, LocalDateTime value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ISysCommitJournal from) {
        setId(from.getId());
        setCreateDt(from.getCreateDt());
        setEventName(from.getEventName());
        setTargetKey(from.getTargetKey());
        setLoginInfo(from.getLoginInfo());
        setOtherInfo(from.getOtherInfo());
    }

    @Override
    public <E extends ISysCommitJournal> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SysCommitJournalRecord
     */
    public SysCommitJournalRecord() {
        super(SysCommitJournalTable.SysCommitJournal);
    }

    /**
     * Create a detached, initialised SysCommitJournalRecord
     */
    public SysCommitJournalRecord(Long id, LocalDateTime createDt, String eventName, String targetKey, String loginInfo, String otherInfo) {
        super(SysCommitJournalTable.SysCommitJournal);

        set(0, id);
        set(1, createDt);
        set(2, eventName);
        set(3, targetKey);
        set(4, loginInfo);
        set(5, otherInfo);
    }
}
