/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.faceless.database.autogen.tables.pojos;


import java.time.LocalDateTime;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import pro.fessional.wings.faceless.database.autogen.tables.interfaces.ISysCommitJournal;


/**
 * The table <code>wings_0.sys_commit_journal</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1",
        "schema version:2019052001"
    },
    date = "2019-10-18T06:20:51.596Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "sys_commit_journal", uniqueConstraints = {
    @UniqueConstraint(name = "KEY_sys_commit_journal_PRIMARY", columnNames = {"id"})
})
public class SysCommitJournal implements ISysCommitJournal {

    private static final long serialVersionUID = -527251417;

    private Long          id;
    private LocalDateTime createDt;
    private String        eventName;
    private String        targetKey;
    private String        loginInfo;
    private String        otherInfo;

    public SysCommitJournal() {}

    public SysCommitJournal(ISysCommitJournal value) {
        this.id = value.getId();
        this.createDt = value.getCreateDt();
        this.eventName = value.getEventName();
        this.targetKey = value.getTargetKey();
        this.loginInfo = value.getLoginInfo();
        this.otherInfo = value.getOtherInfo();
    }

    public SysCommitJournal(
        Long          id,
        LocalDateTime createDt,
        String        eventName,
        String        targetKey,
        String        loginInfo,
        String        otherInfo
    ) {
        this.id = id;
        this.createDt = createDt;
        this.eventName = eventName;
        this.targetKey = targetKey;
        this.loginInfo = loginInfo;
        this.otherInfo = otherInfo;
    }

    @Id
    @Column(name = "id", nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getId() {
        return this.id;
    }

    @Override
    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "create_dt", nullable = false)
    @Override
    public LocalDateTime getCreateDt() {
        return this.createDt;
    }

    @Override
    public void setCreateDt(LocalDateTime createDt) {
        this.createDt = createDt;
    }

    @Column(name = "event_name", nullable = false, length = 200)
    @NotNull
    @Size(max = 200)
    @Override
    public String getEventName() {
        return this.eventName;
    }

    @Override
    public void setEventName(String eventName) {
        this.eventName = eventName;
    }

    @Column(name = "target_key", nullable = false, length = 200)
    @Size(max = 200)
    @Override
    public String getTargetKey() {
        return this.targetKey;
    }

    @Override
    public void setTargetKey(String targetKey) {
        this.targetKey = targetKey;
    }

    @Column(name = "login_info", length = 65535)
    @Size(max = 65535)
    @Override
    public String getLoginInfo() {
        return this.loginInfo;
    }

    @Override
    public void setLoginInfo(String loginInfo) {
        this.loginInfo = loginInfo;
    }

    @Column(name = "other_info", length = 65535)
    @Size(max = 65535)
    @Override
    public String getOtherInfo() {
        return this.otherInfo;
    }

    @Override
    public void setOtherInfo(String otherInfo) {
        this.otherInfo = otherInfo;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final SysCommitJournal other = (SysCommitJournal) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (createDt == null) {
            if (other.createDt != null)
                return false;
        }
        else if (!createDt.equals(other.createDt))
            return false;
        if (eventName == null) {
            if (other.eventName != null)
                return false;
        }
        else if (!eventName.equals(other.eventName))
            return false;
        if (targetKey == null) {
            if (other.targetKey != null)
                return false;
        }
        else if (!targetKey.equals(other.targetKey))
            return false;
        if (loginInfo == null) {
            if (other.loginInfo != null)
                return false;
        }
        else if (!loginInfo.equals(other.loginInfo))
            return false;
        if (otherInfo == null) {
            if (other.otherInfo != null)
                return false;
        }
        else if (!otherInfo.equals(other.otherInfo))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createDt == null) ? 0 : this.createDt.hashCode());
        result = prime * result + ((this.eventName == null) ? 0 : this.eventName.hashCode());
        result = prime * result + ((this.targetKey == null) ? 0 : this.targetKey.hashCode());
        result = prime * result + ((this.loginInfo == null) ? 0 : this.loginInfo.hashCode());
        result = prime * result + ((this.otherInfo == null) ? 0 : this.otherInfo.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("SysCommitJournal (");

        sb.append(id);
        sb.append(", ").append(createDt);
        sb.append(", ").append(eventName);
        sb.append(", ").append(targetKey);
        sb.append(", ").append(loginInfo);
        sb.append(", ").append(otherInfo);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ISysCommitJournal from) {
        setId(from.getId());
        setCreateDt(from.getCreateDt());
        setEventName(from.getEventName());
        setTargetKey(from.getTargetKey());
        setLoginInfo(from.getLoginInfo());
        setOtherInfo(from.getOtherInfo());
    }

    @Override
    public <E extends ISysCommitJournal> E into(E into) {
        into.from(this);
        return into;
    }
}
