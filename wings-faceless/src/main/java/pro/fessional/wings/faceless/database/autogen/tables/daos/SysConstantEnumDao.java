/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.faceless.database.autogen.tables.daos;


import org.jooq.Configuration;
import pro.fessional.wings.faceless.database.autogen.tables.SysConstantEnumTable;
import pro.fessional.wings.faceless.database.autogen.tables.pojos.SysConstantEnum;
import pro.fessional.wings.faceless.database.autogen.tables.records.SysConstantEnumRecord;
import pro.fessional.wings.faceless.database.common.WingsJooqDaoImpl;

import javax.annotation.Generated;
import java.util.List;


/**
 * The table <code>wings.sys_constant_enum</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4",
        "schema version:2019052101"
    },
    date = "2020-06-14T04:56:04.482Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysConstantEnumDao extends WingsJooqDaoImpl<SysConstantEnumTable, SysConstantEnumRecord, SysConstantEnum, Integer> {

    /**
     * Create a new SysConstantEnumDao without any configuration
     */
    public SysConstantEnumDao() {
        super(SysConstantEnumTable.SysConstantEnum, SysConstantEnumTable.asK5, SysConstantEnum.class);
    }

    /**
     * Create a new SysConstantEnumDao with an attached configuration
     */
    public SysConstantEnumDao(Configuration configuration) {
        super(SysConstantEnumTable.SysConstantEnum, SysConstantEnumTable.asK5, SysConstantEnum.class, configuration);
    }

    @Override
    public Integer getId(SysConstantEnum object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<SysConstantEnum> fetchById(Integer... values) {
        return fetch(SysConstantEnumTable.asK5.Id, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public SysConstantEnum fetchOneById(Integer value) {
        return fetchOne(SysConstantEnumTable.asK5.Id, value);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<SysConstantEnum> fetchByType(String... values) {
        return fetch(SysConstantEnumTable.asK5.Type, values);
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public List<SysConstantEnum> fetchByCode(String... values) {
        return fetch(SysConstantEnumTable.asK5.Code, values);
    }

    /**
     * Fetch records that have <code>desc IN (values)</code>
     */
    public List<SysConstantEnum> fetchByDesc(String... values) {
        return fetch(SysConstantEnumTable.asK5.Desc, values);
    }

    /**
     * Fetch records that have <code>info IN (values)</code>
     */
    public List<SysConstantEnum> fetchByInfo(String... values) {
        return fetch(SysConstantEnumTable.asK5.Info, values);
    }
}
