/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.tiny.mail.database.autogen.tables.pojos;


import pro.fessional.wings.tiny.mail.database.autogen.tables.interfaces.IWinMailSender;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.time.LocalDateTime;


/**
 * The table <code>wings_radiant.win_mail_sender</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.16",
        "schema version:2020102701"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "win_mail_sender",
    uniqueConstraints = {
        @UniqueConstraint(name = "KEY_win_mail_sender_PRIMARY", columnNames = { "id" })
    }
)
public class WinMailSender implements IWinMailSender {

    private static final long serialVersionUID = 1L;

    private Long          id;
    private LocalDateTime createDt;
    private LocalDateTime modifyDt;
    private LocalDateTime deleteDt;
    private Long          commitId;
    private String        mailApps;
    private String        mailRuns;
    private String        mailConf;
    private String        mailFrom;
    private String        mailTo;
    private String        mailCc;
    private String        mailBcc;
    private String        mailReply;
    private String        mailSubj;
    private String        mailText;
    private Boolean       mailHtml;
    private String        mailFile;
    private String        markWord;
    private LocalDateTime lastSend;
    private String        lastFail;
    private LocalDateTime lastDone;
    private Integer       lastCost;
    private LocalDateTime nextSend;
    private Integer       nextLock;
    private Integer       sumSend;
    private Integer       sumFail;
    private Integer       sumDone;
    private Integer       maxFail;
    private Integer       maxDone;

    public WinMailSender() {}

    public WinMailSender(IWinMailSender value) {
        this.id = value.getId();
        this.createDt = value.getCreateDt();
        this.modifyDt = value.getModifyDt();
        this.deleteDt = value.getDeleteDt();
        this.commitId = value.getCommitId();
        this.mailApps = value.getMailApps();
        this.mailRuns = value.getMailRuns();
        this.mailConf = value.getMailConf();
        this.mailFrom = value.getMailFrom();
        this.mailTo = value.getMailTo();
        this.mailCc = value.getMailCc();
        this.mailBcc = value.getMailBcc();
        this.mailReply = value.getMailReply();
        this.mailSubj = value.getMailSubj();
        this.mailText = value.getMailText();
        this.mailHtml = value.getMailHtml();
        this.mailFile = value.getMailFile();
        this.markWord = value.getMarkWord();
        this.lastSend = value.getLastSend();
        this.lastFail = value.getLastFail();
        this.lastDone = value.getLastDone();
        this.lastCost = value.getLastCost();
        this.nextSend = value.getNextSend();
        this.nextLock = value.getNextLock();
        this.sumSend = value.getSumSend();
        this.sumFail = value.getSumFail();
        this.sumDone = value.getSumDone();
        this.maxFail = value.getMaxFail();
        this.maxDone = value.getMaxDone();
    }

    public WinMailSender(
        Long          id,
        LocalDateTime createDt,
        LocalDateTime modifyDt,
        LocalDateTime deleteDt,
        Long          commitId,
        String        mailApps,
        String        mailRuns,
        String        mailConf,
        String        mailFrom,
        String        mailTo,
        String        mailCc,
        String        mailBcc,
        String        mailReply,
        String        mailSubj,
        String        mailText,
        Boolean       mailHtml,
        String        mailFile,
        String        markWord,
        LocalDateTime lastSend,
        String        lastFail,
        LocalDateTime lastDone,
        Integer       lastCost,
        LocalDateTime nextSend,
        Integer       nextLock,
        Integer       sumSend,
        Integer       sumFail,
        Integer       sumDone,
        Integer       maxFail,
        Integer       maxDone
    ) {
        this.id = id;
        this.createDt = createDt;
        this.modifyDt = modifyDt;
        this.deleteDt = deleteDt;
        this.commitId = commitId;
        this.mailApps = mailApps;
        this.mailRuns = mailRuns;
        this.mailConf = mailConf;
        this.mailFrom = mailFrom;
        this.mailTo = mailTo;
        this.mailCc = mailCc;
        this.mailBcc = mailBcc;
        this.mailReply = mailReply;
        this.mailSubj = mailSubj;
        this.mailText = mailText;
        this.mailHtml = mailHtml;
        this.mailFile = mailFile;
        this.markWord = markWord;
        this.lastSend = lastSend;
        this.lastFail = lastFail;
        this.lastDone = lastDone;
        this.lastCost = lastCost;
        this.nextSend = nextSend;
        this.nextLock = nextLock;
        this.sumSend = sumSend;
        this.sumFail = sumFail;
        this.sumDone = sumDone;
        this.maxFail = maxFail;
        this.maxDone = maxDone;
    }

    /**
     * Getter for <code>win_mail_sender.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>win_mail_sender.id</code>.
     */
    @Override
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>win_mail_sender.create_dt</code>.
     */
    @Column(name = "create_dt", nullable = false, precision = 3)
    @Override
    public LocalDateTime getCreateDt() {
        return this.createDt;
    }

    /**
     * Setter for <code>win_mail_sender.create_dt</code>.
     */
    @Override
    public void setCreateDt(LocalDateTime createDt) {
        this.createDt = createDt;
    }

    /**
     * Getter for <code>win_mail_sender.modify_dt</code>.
     */
    @Column(name = "modify_dt", nullable = false, precision = 3)
    @Override
    public LocalDateTime getModifyDt() {
        return this.modifyDt;
    }

    /**
     * Setter for <code>win_mail_sender.modify_dt</code>.
     */
    @Override
    public void setModifyDt(LocalDateTime modifyDt) {
        this.modifyDt = modifyDt;
    }

    /**
     * Getter for <code>win_mail_sender.delete_dt</code>.
     */
    @Column(name = "delete_dt", nullable = false, precision = 3)
    @Override
    public LocalDateTime getDeleteDt() {
        return this.deleteDt;
    }

    /**
     * Setter for <code>win_mail_sender.delete_dt</code>.
     */
    @Override
    public void setDeleteDt(LocalDateTime deleteDt) {
        this.deleteDt = deleteDt;
    }

    /**
     * Getter for <code>win_mail_sender.commit_id</code>.
     */
    @Column(name = "commit_id", nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getCommitId() {
        return this.commitId;
    }

    /**
     * Setter for <code>win_mail_sender.commit_id</code>.
     */
    @Override
    public void setCommitId(Long commitId) {
        this.commitId = commitId;
    }

    /**
     * Getter for <code>win_mail_sender.mail_apps</code>.
     */
    @Column(name = "mail_apps", nullable = false, length = 500)
    @Size(max = 500)
    @Override
    public String getMailApps() {
        return this.mailApps;
    }

    /**
     * Setter for <code>win_mail_sender.mail_apps</code>.
     */
    @Override
    public void setMailApps(String mailApps) {
        this.mailApps = mailApps;
    }

    /**
     * Getter for <code>win_mail_sender.mail_runs</code>.
     */
    @Column(name = "mail_runs", nullable = false, length = 100)
    @Size(max = 100)
    @Override
    public String getMailRuns() {
        return this.mailRuns;
    }

    /**
     * Setter for <code>win_mail_sender.mail_runs</code>.
     */
    @Override
    public void setMailRuns(String mailRuns) {
        this.mailRuns = mailRuns;
    }

    /**
     * Getter for <code>win_mail_sender.mail_conf</code>.
     */
    @Column(name = "mail_conf", nullable = false, length = 100)
    @Size(max = 100)
    @Override
    public String getMailConf() {
        return this.mailConf;
    }

    /**
     * Setter for <code>win_mail_sender.mail_conf</code>.
     */
    @Override
    public void setMailConf(String mailConf) {
        this.mailConf = mailConf;
    }

    /**
     * Getter for <code>win_mail_sender.mail_from</code>.
     */
    @Column(name = "mail_from", nullable = false, length = 200)
    @Size(max = 200)
    @Override
    public String getMailFrom() {
        return this.mailFrom;
    }

    /**
     * Setter for <code>win_mail_sender.mail_from</code>.
     */
    @Override
    public void setMailFrom(String mailFrom) {
        this.mailFrom = mailFrom;
    }

    /**
     * Getter for <code>win_mail_sender.mail_to</code>.
     */
    @Column(name = "mail_to", nullable = false, length = 500)
    @Size(max = 500)
    @Override
    public String getMailTo() {
        return this.mailTo;
    }

    /**
     * Setter for <code>win_mail_sender.mail_to</code>.
     */
    @Override
    public void setMailTo(String mailTo) {
        this.mailTo = mailTo;
    }

    /**
     * Getter for <code>win_mail_sender.mail_cc</code>.
     */
    @Column(name = "mail_cc", nullable = false, length = 500)
    @Size(max = 500)
    @Override
    public String getMailCc() {
        return this.mailCc;
    }

    /**
     * Setter for <code>win_mail_sender.mail_cc</code>.
     */
    @Override
    public void setMailCc(String mailCc) {
        this.mailCc = mailCc;
    }

    /**
     * Getter for <code>win_mail_sender.mail_bcc</code>.
     */
    @Column(name = "mail_bcc", nullable = false, length = 500)
    @Size(max = 500)
    @Override
    public String getMailBcc() {
        return this.mailBcc;
    }

    /**
     * Setter for <code>win_mail_sender.mail_bcc</code>.
     */
    @Override
    public void setMailBcc(String mailBcc) {
        this.mailBcc = mailBcc;
    }

    /**
     * Getter for <code>win_mail_sender.mail_reply</code>.
     */
    @Column(name = "mail_reply", nullable = false, length = 200)
    @Size(max = 200)
    @Override
    public String getMailReply() {
        return this.mailReply;
    }

    /**
     * Setter for <code>win_mail_sender.mail_reply</code>.
     */
    @Override
    public void setMailReply(String mailReply) {
        this.mailReply = mailReply;
    }

    /**
     * Getter for <code>win_mail_sender.mail_subj</code>.
     */
    @Column(name = "mail_subj", nullable = false, length = 400)
    @Size(max = 400)
    @Override
    public String getMailSubj() {
        return this.mailSubj;
    }

    /**
     * Setter for <code>win_mail_sender.mail_subj</code>.
     */
    @Override
    public void setMailSubj(String mailSubj) {
        this.mailSubj = mailSubj;
    }

    /**
     * Getter for <code>win_mail_sender.mail_text</code>.
     */
    @Column(name = "mail_text", length = 65535)
    @Size(max = 65535)
    @Override
    public String getMailText() {
        return this.mailText;
    }

    /**
     * Setter for <code>win_mail_sender.mail_text</code>.
     */
    @Override
    public void setMailText(String mailText) {
        this.mailText = mailText;
    }

    /**
     * Getter for <code>win_mail_sender.mail_html</code>.
     */
    @Column(name = "mail_html", nullable = false)
    @Override
    public Boolean getMailHtml() {
        return this.mailHtml;
    }

    /**
     * Setter for <code>win_mail_sender.mail_html</code>.
     */
    @Override
    public void setMailHtml(Boolean mailHtml) {
        this.mailHtml = mailHtml;
    }

    /**
     * Getter for <code>win_mail_sender.mail_file</code>.
     */
    @Column(name = "mail_file", nullable = false, length = 9000)
    @Size(max = 9000)
    @Override
    public String getMailFile() {
        return this.mailFile;
    }

    /**
     * Setter for <code>win_mail_sender.mail_file</code>.
     */
    @Override
    public void setMailFile(String mailFile) {
        this.mailFile = mailFile;
    }

    /**
     * Getter for <code>win_mail_sender.mark_word</code>.
     */
    @Column(name = "mark_word", nullable = false, length = 200)
    @Size(max = 200)
    @Override
    public String getMarkWord() {
        return this.markWord;
    }

    /**
     * Setter for <code>win_mail_sender.mark_word</code>.
     */
    @Override
    public void setMarkWord(String markWord) {
        this.markWord = markWord;
    }

    /**
     * Getter for <code>win_mail_sender.last_send</code>.
     */
    @Column(name = "last_send", nullable = false, precision = 3)
    @Override
    public LocalDateTime getLastSend() {
        return this.lastSend;
    }

    /**
     * Setter for <code>win_mail_sender.last_send</code>.
     */
    @Override
    public void setLastSend(LocalDateTime lastSend) {
        this.lastSend = lastSend;
    }

    /**
     * Getter for <code>win_mail_sender.last_fail</code>.
     */
    @Column(name = "last_fail", length = 65535)
    @Size(max = 65535)
    @Override
    public String getLastFail() {
        return this.lastFail;
    }

    /**
     * Setter for <code>win_mail_sender.last_fail</code>.
     */
    @Override
    public void setLastFail(String lastFail) {
        this.lastFail = lastFail;
    }

    /**
     * Getter for <code>win_mail_sender.last_done</code>.
     */
    @Column(name = "last_done", nullable = false, precision = 3)
    @Override
    public LocalDateTime getLastDone() {
        return this.lastDone;
    }

    /**
     * Setter for <code>win_mail_sender.last_done</code>.
     */
    @Override
    public void setLastDone(LocalDateTime lastDone) {
        this.lastDone = lastDone;
    }

    /**
     * Getter for <code>win_mail_sender.last_cost</code>.
     */
    @Column(name = "last_cost", nullable = false, precision = 10)
    @Override
    public Integer getLastCost() {
        return this.lastCost;
    }

    /**
     * Setter for <code>win_mail_sender.last_cost</code>.
     */
    @Override
    public void setLastCost(Integer lastCost) {
        this.lastCost = lastCost;
    }

    /**
     * Getter for <code>win_mail_sender.next_send</code>.
     */
    @Column(name = "next_send", nullable = false, precision = 3)
    @Override
    public LocalDateTime getNextSend() {
        return this.nextSend;
    }

    /**
     * Setter for <code>win_mail_sender.next_send</code>.
     */
    @Override
    public void setNextSend(LocalDateTime nextSend) {
        this.nextSend = nextSend;
    }

    /**
     * Getter for <code>win_mail_sender.next_lock</code>.
     */
    @Column(name = "next_lock", nullable = false, precision = 10)
    @Override
    public Integer getNextLock() {
        return this.nextLock;
    }

    /**
     * Setter for <code>win_mail_sender.next_lock</code>.
     */
    @Override
    public void setNextLock(Integer nextLock) {
        this.nextLock = nextLock;
    }

    /**
     * Getter for <code>win_mail_sender.sum_send</code>.
     */
    @Column(name = "sum_send", nullable = false, precision = 10)
    @Override
    public Integer getSumSend() {
        return this.sumSend;
    }

    /**
     * Setter for <code>win_mail_sender.sum_send</code>.
     */
    @Override
    public void setSumSend(Integer sumSend) {
        this.sumSend = sumSend;
    }

    /**
     * Getter for <code>win_mail_sender.sum_fail</code>.
     */
    @Column(name = "sum_fail", nullable = false, precision = 10)
    @Override
    public Integer getSumFail() {
        return this.sumFail;
    }

    /**
     * Setter for <code>win_mail_sender.sum_fail</code>.
     */
    @Override
    public void setSumFail(Integer sumFail) {
        this.sumFail = sumFail;
    }

    /**
     * Getter for <code>win_mail_sender.sum_done</code>.
     */
    @Column(name = "sum_done", nullable = false, precision = 10)
    @Override
    public Integer getSumDone() {
        return this.sumDone;
    }

    /**
     * Setter for <code>win_mail_sender.sum_done</code>.
     */
    @Override
    public void setSumDone(Integer sumDone) {
        this.sumDone = sumDone;
    }

    /**
     * Getter for <code>win_mail_sender.max_fail</code>.
     */
    @Column(name = "max_fail", nullable = false, precision = 10)
    @Override
    public Integer getMaxFail() {
        return this.maxFail;
    }

    /**
     * Setter for <code>win_mail_sender.max_fail</code>.
     */
    @Override
    public void setMaxFail(Integer maxFail) {
        this.maxFail = maxFail;
    }

    /**
     * Getter for <code>win_mail_sender.max_done</code>.
     */
    @Column(name = "max_done", nullable = false, precision = 10)
    @Override
    public Integer getMaxDone() {
        return this.maxDone;
    }

    /**
     * Setter for <code>win_mail_sender.max_done</code>.
     */
    @Override
    public void setMaxDone(Integer maxDone) {
        this.maxDone = maxDone;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final WinMailSender other = (WinMailSender) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (createDt == null) {
            if (other.createDt != null)
                return false;
        }
        else if (!createDt.equals(other.createDt))
            return false;
        if (modifyDt == null) {
            if (other.modifyDt != null)
                return false;
        }
        else if (!modifyDt.equals(other.modifyDt))
            return false;
        if (deleteDt == null) {
            if (other.deleteDt != null)
                return false;
        }
        else if (!deleteDt.equals(other.deleteDt))
            return false;
        if (commitId == null) {
            if (other.commitId != null)
                return false;
        }
        else if (!commitId.equals(other.commitId))
            return false;
        if (mailApps == null) {
            if (other.mailApps != null)
                return false;
        }
        else if (!mailApps.equals(other.mailApps))
            return false;
        if (mailRuns == null) {
            if (other.mailRuns != null)
                return false;
        }
        else if (!mailRuns.equals(other.mailRuns))
            return false;
        if (mailConf == null) {
            if (other.mailConf != null)
                return false;
        }
        else if (!mailConf.equals(other.mailConf))
            return false;
        if (mailFrom == null) {
            if (other.mailFrom != null)
                return false;
        }
        else if (!mailFrom.equals(other.mailFrom))
            return false;
        if (mailTo == null) {
            if (other.mailTo != null)
                return false;
        }
        else if (!mailTo.equals(other.mailTo))
            return false;
        if (mailCc == null) {
            if (other.mailCc != null)
                return false;
        }
        else if (!mailCc.equals(other.mailCc))
            return false;
        if (mailBcc == null) {
            if (other.mailBcc != null)
                return false;
        }
        else if (!mailBcc.equals(other.mailBcc))
            return false;
        if (mailReply == null) {
            if (other.mailReply != null)
                return false;
        }
        else if (!mailReply.equals(other.mailReply))
            return false;
        if (mailSubj == null) {
            if (other.mailSubj != null)
                return false;
        }
        else if (!mailSubj.equals(other.mailSubj))
            return false;
        if (mailText == null) {
            if (other.mailText != null)
                return false;
        }
        else if (!mailText.equals(other.mailText))
            return false;
        if (mailHtml == null) {
            if (other.mailHtml != null)
                return false;
        }
        else if (!mailHtml.equals(other.mailHtml))
            return false;
        if (mailFile == null) {
            if (other.mailFile != null)
                return false;
        }
        else if (!mailFile.equals(other.mailFile))
            return false;
        if (markWord == null) {
            if (other.markWord != null)
                return false;
        }
        else if (!markWord.equals(other.markWord))
            return false;
        if (lastSend == null) {
            if (other.lastSend != null)
                return false;
        }
        else if (!lastSend.equals(other.lastSend))
            return false;
        if (lastFail == null) {
            if (other.lastFail != null)
                return false;
        }
        else if (!lastFail.equals(other.lastFail))
            return false;
        if (lastDone == null) {
            if (other.lastDone != null)
                return false;
        }
        else if (!lastDone.equals(other.lastDone))
            return false;
        if (lastCost == null) {
            if (other.lastCost != null)
                return false;
        }
        else if (!lastCost.equals(other.lastCost))
            return false;
        if (nextSend == null) {
            if (other.nextSend != null)
                return false;
        }
        else if (!nextSend.equals(other.nextSend))
            return false;
        if (nextLock == null) {
            if (other.nextLock != null)
                return false;
        }
        else if (!nextLock.equals(other.nextLock))
            return false;
        if (sumSend == null) {
            if (other.sumSend != null)
                return false;
        }
        else if (!sumSend.equals(other.sumSend))
            return false;
        if (sumFail == null) {
            if (other.sumFail != null)
                return false;
        }
        else if (!sumFail.equals(other.sumFail))
            return false;
        if (sumDone == null) {
            if (other.sumDone != null)
                return false;
        }
        else if (!sumDone.equals(other.sumDone))
            return false;
        if (maxFail == null) {
            if (other.maxFail != null)
                return false;
        }
        else if (!maxFail.equals(other.maxFail))
            return false;
        if (maxDone == null) {
            if (other.maxDone != null)
                return false;
        }
        else if (!maxDone.equals(other.maxDone))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createDt == null) ? 0 : this.createDt.hashCode());
        result = prime * result + ((this.modifyDt == null) ? 0 : this.modifyDt.hashCode());
        result = prime * result + ((this.deleteDt == null) ? 0 : this.deleteDt.hashCode());
        result = prime * result + ((this.commitId == null) ? 0 : this.commitId.hashCode());
        result = prime * result + ((this.mailApps == null) ? 0 : this.mailApps.hashCode());
        result = prime * result + ((this.mailRuns == null) ? 0 : this.mailRuns.hashCode());
        result = prime * result + ((this.mailConf == null) ? 0 : this.mailConf.hashCode());
        result = prime * result + ((this.mailFrom == null) ? 0 : this.mailFrom.hashCode());
        result = prime * result + ((this.mailTo == null) ? 0 : this.mailTo.hashCode());
        result = prime * result + ((this.mailCc == null) ? 0 : this.mailCc.hashCode());
        result = prime * result + ((this.mailBcc == null) ? 0 : this.mailBcc.hashCode());
        result = prime * result + ((this.mailReply == null) ? 0 : this.mailReply.hashCode());
        result = prime * result + ((this.mailSubj == null) ? 0 : this.mailSubj.hashCode());
        result = prime * result + ((this.mailText == null) ? 0 : this.mailText.hashCode());
        result = prime * result + ((this.mailHtml == null) ? 0 : this.mailHtml.hashCode());
        result = prime * result + ((this.mailFile == null) ? 0 : this.mailFile.hashCode());
        result = prime * result + ((this.markWord == null) ? 0 : this.markWord.hashCode());
        result = prime * result + ((this.lastSend == null) ? 0 : this.lastSend.hashCode());
        result = prime * result + ((this.lastFail == null) ? 0 : this.lastFail.hashCode());
        result = prime * result + ((this.lastDone == null) ? 0 : this.lastDone.hashCode());
        result = prime * result + ((this.lastCost == null) ? 0 : this.lastCost.hashCode());
        result = prime * result + ((this.nextSend == null) ? 0 : this.nextSend.hashCode());
        result = prime * result + ((this.nextLock == null) ? 0 : this.nextLock.hashCode());
        result = prime * result + ((this.sumSend == null) ? 0 : this.sumSend.hashCode());
        result = prime * result + ((this.sumFail == null) ? 0 : this.sumFail.hashCode());
        result = prime * result + ((this.sumDone == null) ? 0 : this.sumDone.hashCode());
        result = prime * result + ((this.maxFail == null) ? 0 : this.maxFail.hashCode());
        result = prime * result + ((this.maxDone == null) ? 0 : this.maxDone.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("WinMailSender (");

        sb.append(id);
        sb.append(", ").append(createDt);
        sb.append(", ").append(modifyDt);
        sb.append(", ").append(deleteDt);
        sb.append(", ").append(commitId);
        sb.append(", ").append(mailApps);
        sb.append(", ").append(mailRuns);
        sb.append(", ").append(mailConf);
        sb.append(", ").append(mailFrom);
        sb.append(", ").append(mailTo);
        sb.append(", ").append(mailCc);
        sb.append(", ").append(mailBcc);
        sb.append(", ").append(mailReply);
        sb.append(", ").append(mailSubj);
        sb.append(", ").append(mailText);
        sb.append(", ").append(mailHtml);
        sb.append(", ").append(mailFile);
        sb.append(", ").append(markWord);
        sb.append(", ").append(lastSend);
        sb.append(", ").append(lastFail);
        sb.append(", ").append(lastDone);
        sb.append(", ").append(lastCost);
        sb.append(", ").append(nextSend);
        sb.append(", ").append(nextLock);
        sb.append(", ").append(sumSend);
        sb.append(", ").append(sumFail);
        sb.append(", ").append(sumDone);
        sb.append(", ").append(maxFail);
        sb.append(", ").append(maxDone);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IWinMailSender from) {
        setId(from.getId());
        setCreateDt(from.getCreateDt());
        setModifyDt(from.getModifyDt());
        setDeleteDt(from.getDeleteDt());
        setCommitId(from.getCommitId());
        setMailApps(from.getMailApps());
        setMailRuns(from.getMailRuns());
        setMailConf(from.getMailConf());
        setMailFrom(from.getMailFrom());
        setMailTo(from.getMailTo());
        setMailCc(from.getMailCc());
        setMailBcc(from.getMailBcc());
        setMailReply(from.getMailReply());
        setMailSubj(from.getMailSubj());
        setMailText(from.getMailText());
        setMailHtml(from.getMailHtml());
        setMailFile(from.getMailFile());
        setMarkWord(from.getMarkWord());
        setLastSend(from.getLastSend());
        setLastFail(from.getLastFail());
        setLastDone(from.getLastDone());
        setLastCost(from.getLastCost());
        setNextSend(from.getNextSend());
        setNextLock(from.getNextLock());
        setSumSend(from.getSumSend());
        setSumFail(from.getSumFail());
        setSumDone(from.getSumDone());
        setMaxFail(from.getMaxFail());
        setMaxDone(from.getMaxDone());
    }

    @Override
    public <E extends IWinMailSender> E into(E into) {
        into.from(this);
        return into;
    }
}
