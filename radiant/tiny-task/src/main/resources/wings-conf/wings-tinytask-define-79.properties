# 是否可以注册及执行，不会使用Default配置
#wings.tiny.task.define[default].enabled=true
# 是否可以自动注册并启动，不会使用Default配置
#wings.tiny.task.define[default].autorun=true
# 版本号，版本高的配置覆盖版本低的，不会使用Default配置
#wings.tiny.task.define[default].version=0

# 由TinyTasker注解的Bean，格式为Class#method，默认自动识别，不会使用Default配置
#wings.tiny.task.define[default].tasker-bean=
# 任务的参数，对象数组的json格式，默认null或空无参数，不会使用Default配置
#wings.tiny.task.define[default].tasker-para=
# 任务名字，用于通知和日志，可读性好一些，默认为'[短类名#方法名]'，不会使用Default配置
#wings.tiny.task.define[default].tasker-name=

# 是否为轻任务，执行快，秒级完成，不会使用Default配置
#wings.tiny.task.define[default].task-fast=true
# 所属程序，逗号分隔，默认使用spring.application.name，null及空时使用Default配置
wings.tiny.task.define[default].tasker-apps=${spring.application.name}
# 执行模式，RunMode(product|test|develop|local)，逗号分隔忽略大小写，默认所有，null及空时使用Default配置
wings.tiny.task.define[default].tasker-runs=

# 通知Bean，SmallNotice类型，格式为Class，默认无通知。null及空时使用Default配置
wings.tiny.task.define[default].notice-bean=
# 通知的时机，exec|fail|done，逗号分隔忽略大小写，默认fail。null及空时使用Default配置
# 时机大概表述为：exec;try{run...;done}catch{fail}
# exec - 初始任务；done - 执行成功；fail - 执行失败
wings.tiny.task.define[default].notice-when=fail
# 对noticeBean的默认配置的覆盖，默认为json格式，不做补充，null及空时使用Default配置
wings.tiny.task.define[default].notice-conf=

# 调度时区的ZoneId格式，默认系统时区，null及空时使用Default配置
wings.tiny.task.define[default].timing-zone=
# 调度表达式类型，影响timingCron的解析方式，默认为spring cron格式，null及空时使用Default配置
wings.tiny.task.define[default].timing-type=cron
# 调度表达式内容，最高优先级，受timingType影响，默认spring cron格式（秒分时日月周），不会使用Default配置
#wings.tiny.task.define[default].timing-cron=
# 固定空闲相连（秒），优先级次于timingCron，相当于fixedDelay，结束到开始，0为无效，不会使用Default配置
#wings.tiny.task.define[default].timing-idle=0
# 固定频率开始（秒），优先级次于timingIdle，相当于fixedRate，开始到开始，0为无效，不会使用Default配置
#wings.tiny.task.define[default].timing-rate=0
# 错过调度（misfire）多少秒内，需要补救执行，0表示不补救，不会使用Default配置
#wings.tiny.task.define[default].timing-miss=0

# 调度开始的日期时间，timingZone时区，yyyy-MM-dd HH:mm:ss，0表示无效，不会使用Default配置
#wings.tiny.task.define[default].during-from=
# 调度结束的日期时间，timingZone时区，yyyy-MM-dd HH:mm:ss，0表示无效，不会使用Default配置
#wings.tiny.task.define[default].during-stop=
# 总计初始执行多少次后，结束调度，不会使用Default配置
#wings.tiny.task.define[default].during-exec=0
# 连续失败多少次后，结束调度，不会使用Default配置
#wings.tiny.task.define[default].during-fail=0
# 总计成功执行多少次后，结束调度，不会使用Default配置
#wings.tiny.task.define[default].during-done=0

# 执行结果保存的天数，0为不保存，默认60天，0为不保存，null时使用Default配置
wings.tiny.task.define[default].result-keep=60
