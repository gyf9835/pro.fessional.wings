/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.tiny.task.database.autogen.tables.pojos;


import pro.fessional.wings.tiny.task.database.autogen.tables.interfaces.IWinTaskResult;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.time.LocalDateTime;


/**
 * The table <code>wings_radiant.win_task_result</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.16",
        "schema version:2020102601"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "win_task_result",
    uniqueConstraints = {
        @UniqueConstraint(name = "KEY_win_task_result_PRIMARY", columnNames = { "id" })
    }
)
public class WinTaskResult implements IWinTaskResult {

    private static final long serialVersionUID = 1L;

    private Long          id;
    private Long          taskId;
    private String        taskApp;
    private String        taskMsg;
    private LocalDateTime timeExec;
    private LocalDateTime timeFail;
    private LocalDateTime timeStop;
    private Long          timeCost;

    public WinTaskResult() {}

    public WinTaskResult(IWinTaskResult value) {
        this.id = value.getId();
        this.taskId = value.getTaskId();
        this.taskApp = value.getTaskApp();
        this.taskMsg = value.getTaskMsg();
        this.timeExec = value.getTimeExec();
        this.timeFail = value.getTimeFail();
        this.timeStop = value.getTimeStop();
        this.timeCost = value.getTimeCost();
    }

    public WinTaskResult(
        Long          id,
        Long          taskId,
        String        taskApp,
        String        taskMsg,
        LocalDateTime timeExec,
        LocalDateTime timeFail,
        LocalDateTime timeStop,
        Long          timeCost
    ) {
        this.id = id;
        this.taskId = taskId;
        this.taskApp = taskApp;
        this.taskMsg = taskMsg;
        this.timeExec = timeExec;
        this.timeFail = timeFail;
        this.timeStop = timeStop;
        this.timeCost = timeCost;
    }

    /**
     * Getter for <code>win_task_result.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>win_task_result.id</code>.
     */
    @Override
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>win_task_result.task_id</code>.
     */
    @Column(name = "task_id", nullable = false, precision = 19)
    @Override
    public Long getTaskId() {
        return this.taskId;
    }

    /**
     * Setter for <code>win_task_result.task_id</code>.
     */
    @Override
    public void setTaskId(Long taskId) {
        this.taskId = taskId;
    }

    /**
     * Getter for <code>win_task_result.task_app</code>.
     */
    @Column(name = "task_app", nullable = false, length = 300)
    @Size(max = 300)
    @Override
    public String getTaskApp() {
        return this.taskApp;
    }

    /**
     * Setter for <code>win_task_result.task_app</code>.
     */
    @Override
    public void setTaskApp(String taskApp) {
        this.taskApp = taskApp;
    }

    /**
     * Getter for <code>win_task_result.task_msg</code>.
     */
    @Column(name = "task_msg", length = 65535)
    @Size(max = 65535)
    @Override
    public String getTaskMsg() {
        return this.taskMsg;
    }

    /**
     * Setter for <code>win_task_result.task_msg</code>.
     */
    @Override
    public void setTaskMsg(String taskMsg) {
        this.taskMsg = taskMsg;
    }

    /**
     * Getter for <code>win_task_result.time_exec</code>.
     */
    @Column(name = "time_exec", nullable = false, precision = 3)
    @Override
    public LocalDateTime getTimeExec() {
        return this.timeExec;
    }

    /**
     * Setter for <code>win_task_result.time_exec</code>.
     */
    @Override
    public void setTimeExec(LocalDateTime timeExec) {
        this.timeExec = timeExec;
    }

    /**
     * Getter for <code>win_task_result.time_fail</code>.
     */
    @Column(name = "time_fail", nullable = false, precision = 3)
    @Override
    public LocalDateTime getTimeFail() {
        return this.timeFail;
    }

    /**
     * Setter for <code>win_task_result.time_fail</code>.
     */
    @Override
    public void setTimeFail(LocalDateTime timeFail) {
        this.timeFail = timeFail;
    }

    /**
     * Getter for <code>win_task_result.time_stop</code>.
     */
    @Column(name = "time_stop", nullable = false, precision = 3)
    @Override
    public LocalDateTime getTimeStop() {
        return this.timeStop;
    }

    /**
     * Setter for <code>win_task_result.time_stop</code>.
     */
    @Override
    public void setTimeStop(LocalDateTime timeStop) {
        this.timeStop = timeStop;
    }

    /**
     * Getter for <code>win_task_result.time_cost</code>.
     */
    @Column(name = "time_cost", nullable = false, precision = 19)
    @Override
    public Long getTimeCost() {
        return this.timeCost;
    }

    /**
     * Setter for <code>win_task_result.time_cost</code>.
     */
    @Override
    public void setTimeCost(Long timeCost) {
        this.timeCost = timeCost;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final WinTaskResult other = (WinTaskResult) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (taskId == null) {
            if (other.taskId != null)
                return false;
        }
        else if (!taskId.equals(other.taskId))
            return false;
        if (taskApp == null) {
            if (other.taskApp != null)
                return false;
        }
        else if (!taskApp.equals(other.taskApp))
            return false;
        if (taskMsg == null) {
            if (other.taskMsg != null)
                return false;
        }
        else if (!taskMsg.equals(other.taskMsg))
            return false;
        if (timeExec == null) {
            if (other.timeExec != null)
                return false;
        }
        else if (!timeExec.equals(other.timeExec))
            return false;
        if (timeFail == null) {
            if (other.timeFail != null)
                return false;
        }
        else if (!timeFail.equals(other.timeFail))
            return false;
        if (timeStop == null) {
            if (other.timeStop != null)
                return false;
        }
        else if (!timeStop.equals(other.timeStop))
            return false;
        if (timeCost == null) {
            if (other.timeCost != null)
                return false;
        }
        else if (!timeCost.equals(other.timeCost))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.taskId == null) ? 0 : this.taskId.hashCode());
        result = prime * result + ((this.taskApp == null) ? 0 : this.taskApp.hashCode());
        result = prime * result + ((this.taskMsg == null) ? 0 : this.taskMsg.hashCode());
        result = prime * result + ((this.timeExec == null) ? 0 : this.timeExec.hashCode());
        result = prime * result + ((this.timeFail == null) ? 0 : this.timeFail.hashCode());
        result = prime * result + ((this.timeStop == null) ? 0 : this.timeStop.hashCode());
        result = prime * result + ((this.timeCost == null) ? 0 : this.timeCost.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("WinTaskResult (");

        sb.append(id);
        sb.append(", ").append(taskId);
        sb.append(", ").append(taskApp);
        sb.append(", ").append(taskMsg);
        sb.append(", ").append(timeExec);
        sb.append(", ").append(timeFail);
        sb.append(", ").append(timeStop);
        sb.append(", ").append(timeCost);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IWinTaskResult from) {
        setId(from.getId());
        setTaskId(from.getTaskId());
        setTaskApp(from.getTaskApp());
        setTaskMsg(from.getTaskMsg());
        setTimeExec(from.getTimeExec());
        setTimeFail(from.getTimeFail());
        setTimeStop(from.getTimeStop());
        setTimeCost(from.getTimeCost());
    }

    @Override
    public <E extends IWinTaskResult> E into(E into) {
        into.from(this);
        return into;
    }
}
