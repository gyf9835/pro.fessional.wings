/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.tiny.task.database.autogen.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import pro.fessional.wings.tiny.task.database.autogen.tables.WinTaskResultTable;
import pro.fessional.wings.tiny.task.database.autogen.tables.interfaces.IWinTaskResult;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.time.LocalDateTime;


/**
 * The table <code>wings_radiant.win_task_result</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.16",
        "schema version:2020102601"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "win_task_result",
    uniqueConstraints = {
        @UniqueConstraint(name = "KEY_win_task_result_PRIMARY", columnNames = { "id" })
    }
)
public class WinTaskResultRecord extends UpdatableRecordImpl<WinTaskResultRecord> implements Record8<Long, Long, String, String, LocalDateTime, LocalDateTime, LocalDateTime, Long>, IWinTaskResult {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>win_task_result.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>win_task_result.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>win_task_result.task_id</code>.
     */
    @Override
    public void setTaskId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>win_task_result.task_id</code>.
     */
    @Column(name = "task_id", nullable = false, precision = 19)
    @Override
    public Long getTaskId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>win_task_result.task_app</code>.
     */
    @Override
    public void setTaskApp(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>win_task_result.task_app</code>.
     */
    @Column(name = "task_app", nullable = false, length = 300)
    @Size(max = 300)
    @Override
    public String getTaskApp() {
        return (String) get(2);
    }

    /**
     * Setter for <code>win_task_result.task_msg</code>.
     */
    @Override
    public void setTaskMsg(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>win_task_result.task_msg</code>.
     */
    @Column(name = "task_msg", length = 65535)
    @Size(max = 65535)
    @Override
    public String getTaskMsg() {
        return (String) get(3);
    }

    /**
     * Setter for <code>win_task_result.time_exec</code>.
     */
    @Override
    public void setTimeExec(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>win_task_result.time_exec</code>.
     */
    @Column(name = "time_exec", nullable = false, precision = 3)
    @Override
    public LocalDateTime getTimeExec() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>win_task_result.time_fail</code>.
     */
    @Override
    public void setTimeFail(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>win_task_result.time_fail</code>.
     */
    @Column(name = "time_fail", nullable = false, precision = 3)
    @Override
    public LocalDateTime getTimeFail() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>win_task_result.time_stop</code>.
     */
    @Override
    public void setTimeStop(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>win_task_result.time_stop</code>.
     */
    @Column(name = "time_stop", nullable = false, precision = 3)
    @Override
    public LocalDateTime getTimeStop() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>win_task_result.time_cost</code>.
     */
    @Override
    public void setTimeCost(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>win_task_result.time_cost</code>.
     */
    @Column(name = "time_cost", nullable = false, precision = 19)
    @Override
    public Long getTimeCost() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, String, String, LocalDateTime, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, String, String, LocalDateTime, LocalDateTime, LocalDateTime, Long> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return WinTaskResultTable.WinTaskResult.Id;
    }

    @Override
    public Field<Long> field2() {
        return WinTaskResultTable.WinTaskResult.TaskId;
    }

    @Override
    public Field<String> field3() {
        return WinTaskResultTable.WinTaskResult.TaskApp;
    }

    @Override
    public Field<String> field4() {
        return WinTaskResultTable.WinTaskResult.TaskMsg;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return WinTaskResultTable.WinTaskResult.TimeExec;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return WinTaskResultTable.WinTaskResult.TimeFail;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return WinTaskResultTable.WinTaskResult.TimeStop;
    }

    @Override
    public Field<Long> field8() {
        return WinTaskResultTable.WinTaskResult.TimeCost;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getTaskId();
    }

    @Override
    public String component3() {
        return getTaskApp();
    }

    @Override
    public String component4() {
        return getTaskMsg();
    }

    @Override
    public LocalDateTime component5() {
        return getTimeExec();
    }

    @Override
    public LocalDateTime component6() {
        return getTimeFail();
    }

    @Override
    public LocalDateTime component7() {
        return getTimeStop();
    }

    @Override
    public Long component8() {
        return getTimeCost();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getTaskId();
    }

    @Override
    public String value3() {
        return getTaskApp();
    }

    @Override
    public String value4() {
        return getTaskMsg();
    }

    @Override
    public LocalDateTime value5() {
        return getTimeExec();
    }

    @Override
    public LocalDateTime value6() {
        return getTimeFail();
    }

    @Override
    public LocalDateTime value7() {
        return getTimeStop();
    }

    @Override
    public Long value8() {
        return getTimeCost();
    }

    @Override
    public WinTaskResultRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public WinTaskResultRecord value2(Long value) {
        setTaskId(value);
        return this;
    }

    @Override
    public WinTaskResultRecord value3(String value) {
        setTaskApp(value);
        return this;
    }

    @Override
    public WinTaskResultRecord value4(String value) {
        setTaskMsg(value);
        return this;
    }

    @Override
    public WinTaskResultRecord value5(LocalDateTime value) {
        setTimeExec(value);
        return this;
    }

    @Override
    public WinTaskResultRecord value6(LocalDateTime value) {
        setTimeFail(value);
        return this;
    }

    @Override
    public WinTaskResultRecord value7(LocalDateTime value) {
        setTimeStop(value);
        return this;
    }

    @Override
    public WinTaskResultRecord value8(Long value) {
        setTimeCost(value);
        return this;
    }

    @Override
    public WinTaskResultRecord values(Long value1, Long value2, String value3, String value4, LocalDateTime value5, LocalDateTime value6, LocalDateTime value7, Long value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IWinTaskResult from) {
        setId(from.getId());
        setTaskId(from.getTaskId());
        setTaskApp(from.getTaskApp());
        setTaskMsg(from.getTaskMsg());
        setTimeExec(from.getTimeExec());
        setTimeFail(from.getTimeFail());
        setTimeStop(from.getTimeStop());
        setTimeCost(from.getTimeCost());
    }

    @Override
    public <E extends IWinTaskResult> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WinTaskResultRecord
     */
    public WinTaskResultRecord() {
        super(WinTaskResultTable.WinTaskResult);
    }

    /**
     * Create a detached, initialised WinTaskResultRecord
     */
    public WinTaskResultRecord(Long id, Long taskId, String taskApp, String taskMsg, LocalDateTime timeExec, LocalDateTime timeFail, LocalDateTime timeStop, Long timeCost) {
        super(WinTaskResultTable.WinTaskResult);

        setId(id);
        setTaskId(taskId);
        setTaskApp(taskApp);
        setTaskMsg(taskMsg);
        setTimeExec(timeExec);
        setTimeFail(timeFail);
        setTimeStop(timeStop);
        setTimeCost(timeCost);
    }
}
