# 是否在spring启动时，自动完成相关注入。
wings.flywave.enabled=true
# sql类型，当前只支持"mysql"
wings.flywave.sql.dialect=mysql
# 原始分隔符，必须存在，默认";"。
wings.flywave.sql.delimiter-default=;
# 重定义的分隔符的命令，默认"DELIMITER"
wings.flywave.sql.delimiter-command=DELIMITER
# 单行注释，默认 "--"
wings.flywave.sql.comment-single=--
# 多行注释，开头和结束以空格分开表示，默认"/*   */"
wings.flywave.sql.comment-multiple=/*   */

# #### 数据版本跟踪 ######
# 为了和spring变量区分，使用 `{{}}`表示内置变量，全大写
# {{PLAIN_NAME}} 目标表的主表名字
# {{TABLE_NAME}} 目标表名字，可能是主表或分表
# {{TABLE_BODY}} 目标表字段，不含索引和约束
# ######################
#before update trigger，独自历史表
wings.flywave.ver.journal-update=\
 CREATE TABLE `{{TABLE_NAME}}$UPD` (\
 `_ID` INT(11) NOT NULL AUTO_INCREMENT,\
 `_DT` DATETIME DEFAULT NULL,\
 {{TABLE_BODY}},\
 PRIMARY KEY (`_ID`)\
 ) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4

wings.flywave.ver.trigger-update=\
 CREATE TRIGGER `{{TABLE_NAME}}$BU` BEFORE UPDATE ON `{{TABLE_NAME}}`\
 FOR EACH ROW BEGIN\
 INSERT INTO `{{TABLE_NAME}}$UPD` SELECT NULL, NOW(), * FROM `{{TABLE_NAME}}`\
 WHERE ID= OLD.ID ;\
 END

#before delete trigger，共用历史表
wings.flywave.ver.journal-delete=\
 CREATE TABLE `{{PLAIN_NAME}}$DEL` (\
 `_ID` INT(11) NOT NULL AUTO_INCREMENT,\
 `_DT` DATETIME DEFAULT NULL,\
 {{TABLE_BODY}},\
 PRIMARY KEY (`_ID`)\
 ) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4

wings.flywave.ver.trigger-delete=\
 CREATE TRIGGER `{{TABLE_NAME}}$BD` BEFORE DELETE ON `{{TABLE_NAME}}`\
 FOR EACH ROW BEGIN\
 INSERT INTO `{{PLAIN_NAME}}$DEL` SELECT NULL, NOW(), * FROM `{{TABLE_NAME}}`\
 WHERE ID= OLD.ID ;\
 END