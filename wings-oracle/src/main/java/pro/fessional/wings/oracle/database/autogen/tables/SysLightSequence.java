/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.oracle.database.autogen.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.TableImpl;

import pro.fessional.wings.oracle.database.autogen.DefaultSchema;
import pro.fessional.wings.oracle.database.autogen.tables.records.SysLightSequenceRecord;
import pro.fessional.wings.oracle.service.lightid.LightIdAware;


/**
 * The table <code>wings.SYS_LIGHT_SEQUENCE</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9",
        "schema version:2019051201"
    },
    date = "2019-06-03T13:01:45.550Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysLightSequence extends TableImpl<SysLightSequenceRecord> implements LightIdAware {

    private static final long serialVersionUID = 384448788;

    /**
     * The reference instance of <code>SYS_LIGHT_SEQUENCE</code>
     */
    public static final SysLightSequence SYS_LIGHT_SEQUENCE = new SysLightSequence();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysLightSequenceRecord> getRecordType() {
        return SysLightSequenceRecord.class;
    }

    /**
     * The column <code>SYS_LIGHT_SEQUENCE.SEQ_NAME</code>.
     */
    public final TableField<SysLightSequenceRecord, String> SEQ_NAME = createField("SEQ_NAME", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "序列名");

    /**
     * The column <code>SYS_LIGHT_SEQUENCE.BLOCK_ID</code>.
     */
    public final TableField<SysLightSequenceRecord, Integer> BLOCK_ID = createField("BLOCK_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "分块序号");

    /**
     * The column <code>SYS_LIGHT_SEQUENCE.NEXT_VAL</code>.
     */
    public final TableField<SysLightSequenceRecord, Long> NEXT_VAL = createField("NEXT_VAL", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.BIGINT)), this, "下一个序号");

    /**
     * The column <code>SYS_LIGHT_SEQUENCE.STEP_VAL</code>.
     */
    public final TableField<SysLightSequenceRecord, Integer> STEP_VAL = createField("STEP_VAL", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("100", org.jooq.impl.SQLDataType.INTEGER)), this, "序列步长");

    /**
     * The column <code>SYS_LIGHT_SEQUENCE.COMMENTS</code>.
     */
    public final TableField<SysLightSequenceRecord, String> COMMENTS = createField("COMMENTS", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "注释说明");

    /**
     * Create a <code>SYS_LIGHT_SEQUENCE</code> table reference
     */
    public SysLightSequence() {
        this(DSL.name("SYS_LIGHT_SEQUENCE"), null);
    }

    /**
     * Create an aliased <code>SYS_LIGHT_SEQUENCE</code> table reference
     */
    public SysLightSequence(String alias) {
        this(DSL.name(alias), SYS_LIGHT_SEQUENCE);
    }

    /**
     * Create an aliased <code>SYS_LIGHT_SEQUENCE</code> table reference
     */
    public SysLightSequence(Name alias) {
        this(alias, SYS_LIGHT_SEQUENCE);
    }

    private SysLightSequence(Name alias, Table<SysLightSequenceRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysLightSequence(Name alias, Table<SysLightSequenceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("序号生成器"));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SysLightSequenceRecord> getPrimaryKey() {
        return Internal.createUniqueKey(pro.fessional.wings.oracle.database.autogen.tables.SysLightSequence.SYS_LIGHT_SEQUENCE, "KEY_SYS_LIGHT_SEQUENCE_PRIMARY", pro.fessional.wings.oracle.database.autogen.tables.SysLightSequence.SYS_LIGHT_SEQUENCE.SEQ_NAME, pro.fessional.wings.oracle.database.autogen.tables.SysLightSequence.SYS_LIGHT_SEQUENCE.BLOCK_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SysLightSequenceRecord>> getKeys() {
        return Arrays.<UniqueKey<SysLightSequenceRecord>>asList(
              Internal.createUniqueKey(pro.fessional.wings.oracle.database.autogen.tables.SysLightSequence.SYS_LIGHT_SEQUENCE, "KEY_SYS_LIGHT_SEQUENCE_PRIMARY", pro.fessional.wings.oracle.database.autogen.tables.SysLightSequence.SYS_LIGHT_SEQUENCE.SEQ_NAME, pro.fessional.wings.oracle.database.autogen.tables.SysLightSequence.SYS_LIGHT_SEQUENCE.BLOCK_ID)
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysLightSequence as(String alias) {
        return new SysLightSequence(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysLightSequence as(Name alias) {
        return new SysLightSequence(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysLightSequence rename(String name) {
        return new SysLightSequence(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysLightSequence rename(Name name) {
        return new SysLightSequence(name, null);
    }
}
