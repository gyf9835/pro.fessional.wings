/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.oracle.database.autogen.tables.pojos;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import pro.fessional.wings.oracle.database.autogen.tables.interfaces.ISysLightSequence;
import pro.fessional.wings.oracle.service.lightid.LightIdAware;


/**
 * The table <code>wings.SYS_LIGHT_SEQUENCE</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9",
        "schema version:2019051201"
    },
    date = "2019-06-03T13:01:45.550Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "SYS_LIGHT_SEQUENCE", uniqueConstraints = {
    @UniqueConstraint(columnNames = {"SEQ_NAME", "BLOCK_ID"})
})
public class SysLightSequence implements LightIdAware, ISysLightSequence {

    private static final long serialVersionUID = 900019810;

    private String  seqName;
    private Integer blockId;
    private Long    nextVal;
    private Integer stepVal;
    private String  comments;

    public SysLightSequence() {}

    public SysLightSequence(ISysLightSequence value) {
        this.seqName = value.getSeqName();
        this.blockId = value.getBlockId();
        this.nextVal = value.getNextVal();
        this.stepVal = value.getStepVal();
        this.comments = value.getComments();
    }

    public SysLightSequence(
        String  seqName,
        Integer blockId,
        Long    nextVal,
        Integer stepVal,
        String  comments
    ) {
        this.seqName = seqName;
        this.blockId = blockId;
        this.nextVal = nextVal;
        this.stepVal = stepVal;
        this.comments = comments;
    }

    @Column(name = "SEQ_NAME", nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    @Override
    public String getSeqName() {
        return this.seqName;
    }

    @Override
    public void setSeqName(String seqName) {
        this.seqName = seqName;
    }

    @Column(name = "BLOCK_ID", nullable = false, precision = 10)
    @Override
    public Integer getBlockId() {
        return this.blockId;
    }

    @Override
    public void setBlockId(Integer blockId) {
        this.blockId = blockId;
    }

    @Column(name = "NEXT_VAL", nullable = false, precision = 19)
    @Override
    public Long getNextVal() {
        return this.nextVal;
    }

    @Override
    public void setNextVal(Long nextVal) {
        this.nextVal = nextVal;
    }

    @Column(name = "STEP_VAL", nullable = false, precision = 10)
    @Override
    public Integer getStepVal() {
        return this.stepVal;
    }

    @Override
    public void setStepVal(Integer stepVal) {
        this.stepVal = stepVal;
    }

    @Column(name = "COMMENTS", nullable = false, length = 200)
    @NotNull
    @Size(max = 200)
    @Override
    public String getComments() {
        return this.comments;
    }

    @Override
    public void setComments(String comments) {
        this.comments = comments;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final SysLightSequence other = (SysLightSequence) obj;
        if (seqName == null) {
            if (other.seqName != null)
                return false;
        }
        else if (!seqName.equals(other.seqName))
            return false;
        if (blockId == null) {
            if (other.blockId != null)
                return false;
        }
        else if (!blockId.equals(other.blockId))
            return false;
        if (nextVal == null) {
            if (other.nextVal != null)
                return false;
        }
        else if (!nextVal.equals(other.nextVal))
            return false;
        if (stepVal == null) {
            if (other.stepVal != null)
                return false;
        }
        else if (!stepVal.equals(other.stepVal))
            return false;
        if (comments == null) {
            if (other.comments != null)
                return false;
        }
        else if (!comments.equals(other.comments))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.seqName == null) ? 0 : this.seqName.hashCode());
        result = prime * result + ((this.blockId == null) ? 0 : this.blockId.hashCode());
        result = prime * result + ((this.nextVal == null) ? 0 : this.nextVal.hashCode());
        result = prime * result + ((this.stepVal == null) ? 0 : this.stepVal.hashCode());
        result = prime * result + ((this.comments == null) ? 0 : this.comments.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("SysLightSequence (");

        sb.append(seqName);
        sb.append(", ").append(blockId);
        sb.append(", ").append(nextVal);
        sb.append(", ").append(stepVal);
        sb.append(", ").append(comments);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ISysLightSequence from) {
        setSeqName(from.getSeqName());
        setBlockId(from.getBlockId());
        setNextVal(from.getNextVal());
        setStepVal(from.getStepVal());
        setComments(from.getComments());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ISysLightSequence> E into(E into) {
        into.from(this);
        return into;
    }
}
