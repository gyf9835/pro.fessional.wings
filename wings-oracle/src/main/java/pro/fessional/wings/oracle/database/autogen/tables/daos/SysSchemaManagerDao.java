/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.oracle.database.autogen.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import pro.fessional.wings.oracle.database.autogen.tables.SysSchemaManager;
import pro.fessional.wings.oracle.database.autogen.tables.records.SysSchemaManagerRecord;
import pro.fessional.wings.oracle.service.lightid.LightIdAware;


/**
 * The table <code>wings.SYS_SCHEMA_MANAGER</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9",
        "schema version:2019051201"
    },
    date = "2019-06-03T13:01:45.550Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class SysSchemaManagerDao extends DAOImpl<SysSchemaManagerRecord, pro.fessional.wings.oracle.database.autogen.tables.pojos.SysSchemaManager, String> implements LightIdAware {

    /**
     * Create a new SysSchemaManagerDao without any configuration
     */
    public SysSchemaManagerDao() {
        super(SysSchemaManager.SYS_SCHEMA_MANAGER, pro.fessional.wings.oracle.database.autogen.tables.pojos.SysSchemaManager.class);
    }

    /**
     * Create a new SysSchemaManagerDao with an attached configuration
     */
    @Autowired
    public SysSchemaManagerDao(Configuration configuration) {
        super(SysSchemaManager.SYS_SCHEMA_MANAGER, pro.fessional.wings.oracle.database.autogen.tables.pojos.SysSchemaManager.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(pro.fessional.wings.oracle.database.autogen.tables.pojos.SysSchemaManager object) {
        return object.getTableName();
    }

    /**
     * Fetch records that have <code>TABLE_NAME IN (values)</code>
     */
    public List<pro.fessional.wings.oracle.database.autogen.tables.pojos.SysSchemaManager> fetchByTableName(String... values) {
        return fetch(SysSchemaManager.SYS_SCHEMA_MANAGER.TABLE_NAME, values);
    }

    /**
     * Fetch a unique record that has <code>TABLE_NAME = value</code>
     */
    public pro.fessional.wings.oracle.database.autogen.tables.pojos.SysSchemaManager fetchOneByTableName(String value) {
        return fetchOne(SysSchemaManager.SYS_SCHEMA_MANAGER.TABLE_NAME, value);
    }

    /**
     * Fetch records that have <code>CREATE_DT IN (values)</code>
     */
    public List<pro.fessional.wings.oracle.database.autogen.tables.pojos.SysSchemaManager> fetchByCreateDt(LocalDateTime... values) {
        return fetch(SysSchemaManager.SYS_SCHEMA_MANAGER.CREATE_DT, values);
    }

    /**
     * Fetch records that have <code>MODIFY_DT IN (values)</code>
     */
    public List<pro.fessional.wings.oracle.database.autogen.tables.pojos.SysSchemaManager> fetchByModifyDt(LocalDateTime... values) {
        return fetch(SysSchemaManager.SYS_SCHEMA_MANAGER.MODIFY_DT, values);
    }

    /**
     * Fetch records that have <code>COMMIT_ID IN (values)</code>
     */
    public List<pro.fessional.wings.oracle.database.autogen.tables.pojos.SysSchemaManager> fetchByCommitId(Long... values) {
        return fetch(SysSchemaManager.SYS_SCHEMA_MANAGER.COMMIT_ID, values);
    }

    /**
     * Fetch records that have <code>LOG_UPDATE IN (values)</code>
     */
    public List<pro.fessional.wings.oracle.database.autogen.tables.pojos.SysSchemaManager> fetchByLogUpdate(Boolean... values) {
        return fetch(SysSchemaManager.SYS_SCHEMA_MANAGER.LOG_UPDATE, values);
    }

    /**
     * Fetch records that have <code>LOG_DELETE IN (values)</code>
     */
    public List<pro.fessional.wings.oracle.database.autogen.tables.pojos.SysSchemaManager> fetchByLogDelete(Boolean... values) {
        return fetch(SysSchemaManager.SYS_SCHEMA_MANAGER.LOG_DELETE, values);
    }

    /**
     * Fetch records that have <code>SHARD_AUTO IN (values)</code>
     */
    public List<pro.fessional.wings.oracle.database.autogen.tables.pojos.SysSchemaManager> fetchByShardAuto(Integer... values) {
        return fetch(SysSchemaManager.SYS_SCHEMA_MANAGER.SHARD_AUTO, values);
    }
}
