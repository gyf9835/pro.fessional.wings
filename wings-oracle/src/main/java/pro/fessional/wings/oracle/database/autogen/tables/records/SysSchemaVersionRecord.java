/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.oracle.database.autogen.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

import pro.fessional.wings.oracle.database.autogen.tables.SysSchemaVersion;
import pro.fessional.wings.oracle.database.autogen.tables.interfaces.ISysSchemaVersion;
import pro.fessional.wings.oracle.service.lightid.LightIdAware;


/**
 * The table <code>wings.SYS_SCHEMA_VERSION</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9",
        "schema version:2019051201"
    },
    date = "2019-06-03T13:01:45.550Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "SYS_SCHEMA_VERSION")
public class SysSchemaVersionRecord extends UpdatableRecordImpl<SysSchemaVersionRecord> implements LightIdAware, Record9<Long, LocalDateTime, LocalDateTime, Long, String, String, String, String, LocalDateTime>, ISysSchemaVersion {

    private static final long serialVersionUID = 734841289;

    /**
     * Setter for <code>SYS_SCHEMA_VERSION.REVISION</code>.
     */
    @Override
    public void setRevision(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>SYS_SCHEMA_VERSION.REVISION</code>.
     */
    @Id
    @Column(name = "REVISION", unique = true, nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getRevision() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>SYS_SCHEMA_VERSION.CREATE_DT</code>.
     */
    @Override
    public void setCreateDt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>SYS_SCHEMA_VERSION.CREATE_DT</code>.
     */
    @Column(name = "CREATE_DT", nullable = false)
    @Override
    public LocalDateTime getCreateDt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>SYS_SCHEMA_VERSION.MODIFY_DT</code>.
     */
    @Override
    public void setModifyDt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>SYS_SCHEMA_VERSION.MODIFY_DT</code>.
     */
    @Column(name = "MODIFY_DT", nullable = false)
    @Override
    public LocalDateTime getModifyDt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>SYS_SCHEMA_VERSION.COMMIT_ID</code>.
     */
    @Override
    public void setCommitId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>SYS_SCHEMA_VERSION.COMMIT_ID</code>.
     */
    @Column(name = "COMMIT_ID", nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getCommitId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>SYS_SCHEMA_VERSION.EXEC_SQL</code>.
     */
    @Override
    public void setExecSql(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>SYS_SCHEMA_VERSION.EXEC_SQL</code>.
     */
    @Column(name = "EXEC_SQL", nullable = false, length = 65535)
    @NotNull
    @Size(max = 65535)
    @Override
    public String getExecSql() {
        return (String) get(4);
    }

    /**
     * Setter for <code>SYS_SCHEMA_VERSION.EXEC_MD5</code>.
     */
    @Override
    public void setExecMd5(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>SYS_SCHEMA_VERSION.EXEC_MD5</code>.
     */
    @Column(name = "EXEC_MD5", nullable = false, length = 32)
    @Size(max = 32)
    @Override
    public String getExecMd5() {
        return (String) get(5);
    }

    /**
     * Setter for <code>SYS_SCHEMA_VERSION.UNDO_SQL</code>.
     */
    @Override
    public void setUndoSql(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>SYS_SCHEMA_VERSION.UNDO_SQL</code>.
     */
    @Column(name = "UNDO_SQL", nullable = false, length = 65535)
    @NotNull
    @Size(max = 65535)
    @Override
    public String getUndoSql() {
        return (String) get(6);
    }

    /**
     * Setter for <code>SYS_SCHEMA_VERSION.UNDO_MD5</code>.
     */
    @Override
    public void setUndoMd5(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>SYS_SCHEMA_VERSION.UNDO_MD5</code>.
     */
    @Column(name = "UNDO_MD5", nullable = false, length = 32)
    @Size(max = 32)
    @Override
    public String getUndoMd5() {
        return (String) get(7);
    }

    /**
     * Setter for <code>SYS_SCHEMA_VERSION.APPLY_DT</code>.
     */
    @Override
    public void setApplyDt(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>SYS_SCHEMA_VERSION.APPLY_DT</code>.
     */
    @Column(name = "APPLY_DT", nullable = false)
    @Override
    public LocalDateTime getApplyDt() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Long, LocalDateTime, LocalDateTime, Long, String, String, String, String, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Long, LocalDateTime, LocalDateTime, Long, String, String, String, String, LocalDateTime> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return SysSchemaVersion.SYS_SCHEMA_VERSION.REVISION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field2() {
        return SysSchemaVersion.SYS_SCHEMA_VERSION.CREATE_DT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field3() {
        return SysSchemaVersion.SYS_SCHEMA_VERSION.MODIFY_DT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return SysSchemaVersion.SYS_SCHEMA_VERSION.COMMIT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return SysSchemaVersion.SYS_SCHEMA_VERSION.EXEC_SQL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return SysSchemaVersion.SYS_SCHEMA_VERSION.EXEC_MD5;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return SysSchemaVersion.SYS_SCHEMA_VERSION.UNDO_SQL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return SysSchemaVersion.SYS_SCHEMA_VERSION.UNDO_MD5;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field9() {
        return SysSchemaVersion.SYS_SCHEMA_VERSION.APPLY_DT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getRevision();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component2() {
        return getCreateDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component3() {
        return getModifyDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getCommitId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getExecSql();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getExecMd5();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getUndoSql();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getUndoMd5();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component9() {
        return getApplyDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getRevision();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value2() {
        return getCreateDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value3() {
        return getModifyDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getCommitId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getExecSql();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getExecMd5();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getUndoSql();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getUndoMd5();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value9() {
        return getApplyDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysSchemaVersionRecord value1(Long value) {
        setRevision(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysSchemaVersionRecord value2(LocalDateTime value) {
        setCreateDt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysSchemaVersionRecord value3(LocalDateTime value) {
        setModifyDt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysSchemaVersionRecord value4(Long value) {
        setCommitId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysSchemaVersionRecord value5(String value) {
        setExecSql(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysSchemaVersionRecord value6(String value) {
        setExecMd5(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysSchemaVersionRecord value7(String value) {
        setUndoSql(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysSchemaVersionRecord value8(String value) {
        setUndoMd5(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysSchemaVersionRecord value9(LocalDateTime value) {
        setApplyDt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysSchemaVersionRecord values(Long value1, LocalDateTime value2, LocalDateTime value3, Long value4, String value5, String value6, String value7, String value8, LocalDateTime value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ISysSchemaVersion from) {
        setRevision(from.getRevision());
        setCreateDt(from.getCreateDt());
        setModifyDt(from.getModifyDt());
        setCommitId(from.getCommitId());
        setExecSql(from.getExecSql());
        setExecMd5(from.getExecMd5());
        setUndoSql(from.getUndoSql());
        setUndoMd5(from.getUndoMd5());
        setApplyDt(from.getApplyDt());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ISysSchemaVersion> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SysSchemaVersionRecord
     */
    public SysSchemaVersionRecord() {
        super(SysSchemaVersion.SYS_SCHEMA_VERSION);
    }

    /**
     * Create a detached, initialised SysSchemaVersionRecord
     */
    public SysSchemaVersionRecord(Long revision, LocalDateTime createDt, LocalDateTime modifyDt, Long commitId, String execSql, String execMd5, String undoSql, String undoMd5, LocalDateTime applyDt) {
        super(SysSchemaVersion.SYS_SCHEMA_VERSION);

        set(0, revision);
        set(1, createDt);
        set(2, modifyDt);
        set(3, commitId);
        set(4, execSql);
        set(5, execMd5);
        set(6, undoSql);
        set(7, undoMd5);
        set(8, applyDt);
    }
}
