/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.oracle.database.autogen.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import pro.fessional.wings.oracle.database.autogen.tables.SysSchemaManager;
import pro.fessional.wings.oracle.database.autogen.tables.interfaces.ISysSchemaManager;
import pro.fessional.wings.oracle.service.lightid.LightIdAware;


/**
 * The table <code>wings.SYS_SCHEMA_MANAGER</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9",
        "schema version:2019051201"
    },
    date = "2019-06-03T13:01:45.550Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "SYS_SCHEMA_MANAGER")
public class SysSchemaManagerRecord extends UpdatableRecordImpl<SysSchemaManagerRecord> implements LightIdAware, Record7<String, LocalDateTime, LocalDateTime, Long, Boolean, Boolean, Integer>, ISysSchemaManager {

    private static final long serialVersionUID = 753142449;

    /**
     * Setter for <code>SYS_SCHEMA_MANAGER.TABLE_NAME</code>.
     */
    @Override
    public void setTableName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>SYS_SCHEMA_MANAGER.TABLE_NAME</code>.
     */
    @Id
    @Column(name = "TABLE_NAME", unique = true, nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    @Override
    public String getTableName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>SYS_SCHEMA_MANAGER.CREATE_DT</code>.
     */
    @Override
    public void setCreateDt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>SYS_SCHEMA_MANAGER.CREATE_DT</code>.
     */
    @Column(name = "CREATE_DT", nullable = false)
    @Override
    public LocalDateTime getCreateDt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>SYS_SCHEMA_MANAGER.MODIFY_DT</code>.
     */
    @Override
    public void setModifyDt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>SYS_SCHEMA_MANAGER.MODIFY_DT</code>.
     */
    @Column(name = "MODIFY_DT", nullable = false)
    @Override
    public LocalDateTime getModifyDt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>SYS_SCHEMA_MANAGER.COMMIT_ID</code>.
     */
    @Override
    public void setCommitId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>SYS_SCHEMA_MANAGER.COMMIT_ID</code>.
     */
    @Column(name = "COMMIT_ID", nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getCommitId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>SYS_SCHEMA_MANAGER.LOG_UPDATE</code>.
     */
    @Override
    public void setLogUpdate(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>SYS_SCHEMA_MANAGER.LOG_UPDATE</code>.
     */
    @Column(name = "LOG_UPDATE", nullable = false)
    @Override
    public Boolean getLogUpdate() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>SYS_SCHEMA_MANAGER.LOG_DELETE</code>.
     */
    @Override
    public void setLogDelete(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>SYS_SCHEMA_MANAGER.LOG_DELETE</code>.
     */
    @Column(name = "LOG_DELETE", nullable = false)
    @Override
    public Boolean getLogDelete() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>SYS_SCHEMA_MANAGER.SHARD_AUTO</code>.
     */
    @Override
    public void setShardAuto(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>SYS_SCHEMA_MANAGER.SHARD_AUTO</code>.
     */
    @Column(name = "SHARD_AUTO", nullable = false, precision = 10)
    @Override
    public Integer getShardAuto() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, LocalDateTime, LocalDateTime, Long, Boolean, Boolean, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, LocalDateTime, LocalDateTime, Long, Boolean, Boolean, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return SysSchemaManager.SYS_SCHEMA_MANAGER.TABLE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field2() {
        return SysSchemaManager.SYS_SCHEMA_MANAGER.CREATE_DT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field3() {
        return SysSchemaManager.SYS_SCHEMA_MANAGER.MODIFY_DT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return SysSchemaManager.SYS_SCHEMA_MANAGER.COMMIT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return SysSchemaManager.SYS_SCHEMA_MANAGER.LOG_UPDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field6() {
        return SysSchemaManager.SYS_SCHEMA_MANAGER.LOG_DELETE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return SysSchemaManager.SYS_SCHEMA_MANAGER.SHARD_AUTO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getTableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component2() {
        return getCreateDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component3() {
        return getModifyDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getCommitId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component5() {
        return getLogUpdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component6() {
        return getLogDelete();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getShardAuto();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getTableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value2() {
        return getCreateDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value3() {
        return getModifyDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getCommitId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getLogUpdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value6() {
        return getLogDelete();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getShardAuto();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysSchemaManagerRecord value1(String value) {
        setTableName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysSchemaManagerRecord value2(LocalDateTime value) {
        setCreateDt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysSchemaManagerRecord value3(LocalDateTime value) {
        setModifyDt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysSchemaManagerRecord value4(Long value) {
        setCommitId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysSchemaManagerRecord value5(Boolean value) {
        setLogUpdate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysSchemaManagerRecord value6(Boolean value) {
        setLogDelete(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysSchemaManagerRecord value7(Integer value) {
        setShardAuto(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysSchemaManagerRecord values(String value1, LocalDateTime value2, LocalDateTime value3, Long value4, Boolean value5, Boolean value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ISysSchemaManager from) {
        setTableName(from.getTableName());
        setCreateDt(from.getCreateDt());
        setModifyDt(from.getModifyDt());
        setCommitId(from.getCommitId());
        setLogUpdate(from.getLogUpdate());
        setLogDelete(from.getLogDelete());
        setShardAuto(from.getShardAuto());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ISysSchemaManager> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SysSchemaManagerRecord
     */
    public SysSchemaManagerRecord() {
        super(SysSchemaManager.SYS_SCHEMA_MANAGER);
    }

    /**
     * Create a detached, initialised SysSchemaManagerRecord
     */
    public SysSchemaManagerRecord(String tableName, LocalDateTime createDt, LocalDateTime modifyDt, Long commitId, Boolean logUpdate, Boolean logDelete, Integer shardAuto) {
        super(SysSchemaManager.SYS_SCHEMA_MANAGER);

        set(0, tableName);
        set(1, createDt);
        set(2, modifyDt);
        set(3, commitId);
        set(4, logUpdate);
        set(5, logDelete);
        set(6, shardAuto);
    }
}
