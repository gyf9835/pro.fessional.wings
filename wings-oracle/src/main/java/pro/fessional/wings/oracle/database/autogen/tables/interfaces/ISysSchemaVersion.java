/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.oracle.database.autogen.tables.interfaces;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import pro.fessional.wings.oracle.database.JournalPo;
import pro.fessional.wings.oracle.service.lightid.LightIdAware;


/**
 * The table <code>wings.SYS_SCHEMA_VERSION</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9",
        "schema version:2019051201"
    },
    date = "2019-06-03T13:01:45.550Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "SYS_SCHEMA_VERSION")
public interface ISysSchemaVersion extends JournalPo, LightIdAware, Serializable {

    /**
     * Setter for <code>SYS_SCHEMA_VERSION.REVISION</code>.
     */
    public void setRevision(Long value);

    /**
     * Getter for <code>SYS_SCHEMA_VERSION.REVISION</code>.
     */
    @Id
    @Column(name = "REVISION", unique = true, nullable = false, precision = 19)
    @NotNull
    public Long getRevision();

    /**
     * Setter for <code>SYS_SCHEMA_VERSION.CREATE_DT</code>.
     */
    public void setCreateDt(LocalDateTime value);

    /**
     * Getter for <code>SYS_SCHEMA_VERSION.CREATE_DT</code>.
     */
    @Column(name = "CREATE_DT", nullable = false)
    public LocalDateTime getCreateDt();

    /**
     * Setter for <code>SYS_SCHEMA_VERSION.MODIFY_DT</code>.
     */
    public void setModifyDt(LocalDateTime value);

    /**
     * Getter for <code>SYS_SCHEMA_VERSION.MODIFY_DT</code>.
     */
    @Column(name = "MODIFY_DT", nullable = false)
    public LocalDateTime getModifyDt();

    /**
     * Setter for <code>SYS_SCHEMA_VERSION.COMMIT_ID</code>.
     */
    public void setCommitId(Long value);

    /**
     * Getter for <code>SYS_SCHEMA_VERSION.COMMIT_ID</code>.
     */
    @Column(name = "COMMIT_ID", nullable = false, precision = 19)
    @NotNull
    public Long getCommitId();

    /**
     * Setter for <code>SYS_SCHEMA_VERSION.EXEC_SQL</code>.
     */
    public void setExecSql(String value);

    /**
     * Getter for <code>SYS_SCHEMA_VERSION.EXEC_SQL</code>.
     */
    @Column(name = "EXEC_SQL", nullable = false, length = 65535)
    @NotNull
    @Size(max = 65535)
    public String getExecSql();

    /**
     * Setter for <code>SYS_SCHEMA_VERSION.EXEC_MD5</code>.
     */
    public void setExecMd5(String value);

    /**
     * Getter for <code>SYS_SCHEMA_VERSION.EXEC_MD5</code>.
     */
    @Column(name = "EXEC_MD5", nullable = false, length = 32)
    @Size(max = 32)
    public String getExecMd5();

    /**
     * Setter for <code>SYS_SCHEMA_VERSION.UNDO_SQL</code>.
     */
    public void setUndoSql(String value);

    /**
     * Getter for <code>SYS_SCHEMA_VERSION.UNDO_SQL</code>.
     */
    @Column(name = "UNDO_SQL", nullable = false, length = 65535)
    @NotNull
    @Size(max = 65535)
    public String getUndoSql();

    /**
     * Setter for <code>SYS_SCHEMA_VERSION.UNDO_MD5</code>.
     */
    public void setUndoMd5(String value);

    /**
     * Getter for <code>SYS_SCHEMA_VERSION.UNDO_MD5</code>.
     */
    @Column(name = "UNDO_MD5", nullable = false, length = 32)
    @Size(max = 32)
    public String getUndoMd5();

    /**
     * Setter for <code>SYS_SCHEMA_VERSION.APPLY_DT</code>.
     */
    public void setApplyDt(LocalDateTime value);

    /**
     * Getter for <code>SYS_SCHEMA_VERSION.APPLY_DT</code>.
     */
    @Column(name = "APPLY_DT", nullable = false)
    public LocalDateTime getApplyDt();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface ISysSchemaVersion
     */
    public void from(pro.fessional.wings.oracle.database.autogen.tables.interfaces.ISysSchemaVersion from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface ISysSchemaVersion
     */
    public <E extends pro.fessional.wings.oracle.database.autogen.tables.interfaces.ISysSchemaVersion> E into(E into);
}
