/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.oracle.database.autogen.tables.pojos;


import java.time.LocalDateTime;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import pro.fessional.wings.oracle.database.autogen.tables.interfaces.ISysSchemaManager;
import pro.fessional.wings.oracle.service.lightid.LightIdAware;


/**
 * The table <code>wings.SYS_SCHEMA_MANAGER</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9",
        "schema version:2019051201"
    },
    date = "2019-06-03T13:01:45.550Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "SYS_SCHEMA_MANAGER")
public class SysSchemaManager implements LightIdAware, ISysSchemaManager {

    private static final long serialVersionUID = -1160104214;

    private String        tableName;
    private LocalDateTime createDt;
    private LocalDateTime modifyDt;
    private Long          commitId;
    private Boolean       logUpdate;
    private Boolean       logDelete;
    private Integer       shardAuto;

    public SysSchemaManager() {}

    public SysSchemaManager(ISysSchemaManager value) {
        this.tableName = value.getTableName();
        this.createDt = value.getCreateDt();
        this.modifyDt = value.getModifyDt();
        this.commitId = value.getCommitId();
        this.logUpdate = value.getLogUpdate();
        this.logDelete = value.getLogDelete();
        this.shardAuto = value.getShardAuto();
    }

    public SysSchemaManager(
        String        tableName,
        LocalDateTime createDt,
        LocalDateTime modifyDt,
        Long          commitId,
        Boolean       logUpdate,
        Boolean       logDelete,
        Integer       shardAuto
    ) {
        this.tableName = tableName;
        this.createDt = createDt;
        this.modifyDt = modifyDt;
        this.commitId = commitId;
        this.logUpdate = logUpdate;
        this.logDelete = logDelete;
        this.shardAuto = shardAuto;
    }

    @Id
    @Column(name = "TABLE_NAME", unique = true, nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    @Override
    public String getTableName() {
        return this.tableName;
    }

    @Override
    public void setTableName(String tableName) {
        this.tableName = tableName;
    }

    @Column(name = "CREATE_DT", nullable = false)
    @Override
    public LocalDateTime getCreateDt() {
        return this.createDt;
    }

    @Override
    public void setCreateDt(LocalDateTime createDt) {
        this.createDt = createDt;
    }

    @Column(name = "MODIFY_DT", nullable = false)
    @Override
    public LocalDateTime getModifyDt() {
        return this.modifyDt;
    }

    @Override
    public void setModifyDt(LocalDateTime modifyDt) {
        this.modifyDt = modifyDt;
    }

    @Column(name = "COMMIT_ID", nullable = false, precision = 19)
    @NotNull
    @Override
    public Long getCommitId() {
        return this.commitId;
    }

    @Override
    public void setCommitId(Long commitId) {
        this.commitId = commitId;
    }

    @Column(name = "LOG_UPDATE", nullable = false)
    @Override
    public Boolean getLogUpdate() {
        return this.logUpdate;
    }

    @Override
    public void setLogUpdate(Boolean logUpdate) {
        this.logUpdate = logUpdate;
    }

    @Column(name = "LOG_DELETE", nullable = false)
    @Override
    public Boolean getLogDelete() {
        return this.logDelete;
    }

    @Override
    public void setLogDelete(Boolean logDelete) {
        this.logDelete = logDelete;
    }

    @Column(name = "SHARD_AUTO", nullable = false, precision = 10)
    @Override
    public Integer getShardAuto() {
        return this.shardAuto;
    }

    @Override
    public void setShardAuto(Integer shardAuto) {
        this.shardAuto = shardAuto;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final SysSchemaManager other = (SysSchemaManager) obj;
        if (tableName == null) {
            if (other.tableName != null)
                return false;
        }
        else if (!tableName.equals(other.tableName))
            return false;
        if (createDt == null) {
            if (other.createDt != null)
                return false;
        }
        else if (!createDt.equals(other.createDt))
            return false;
        if (modifyDt == null) {
            if (other.modifyDt != null)
                return false;
        }
        else if (!modifyDt.equals(other.modifyDt))
            return false;
        if (commitId == null) {
            if (other.commitId != null)
                return false;
        }
        else if (!commitId.equals(other.commitId))
            return false;
        if (logUpdate == null) {
            if (other.logUpdate != null)
                return false;
        }
        else if (!logUpdate.equals(other.logUpdate))
            return false;
        if (logDelete == null) {
            if (other.logDelete != null)
                return false;
        }
        else if (!logDelete.equals(other.logDelete))
            return false;
        if (shardAuto == null) {
            if (other.shardAuto != null)
                return false;
        }
        else if (!shardAuto.equals(other.shardAuto))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.tableName == null) ? 0 : this.tableName.hashCode());
        result = prime * result + ((this.createDt == null) ? 0 : this.createDt.hashCode());
        result = prime * result + ((this.modifyDt == null) ? 0 : this.modifyDt.hashCode());
        result = prime * result + ((this.commitId == null) ? 0 : this.commitId.hashCode());
        result = prime * result + ((this.logUpdate == null) ? 0 : this.logUpdate.hashCode());
        result = prime * result + ((this.logDelete == null) ? 0 : this.logDelete.hashCode());
        result = prime * result + ((this.shardAuto == null) ? 0 : this.shardAuto.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("SysSchemaManager (");

        sb.append(tableName);
        sb.append(", ").append(createDt);
        sb.append(", ").append(modifyDt);
        sb.append(", ").append(commitId);
        sb.append(", ").append(logUpdate);
        sb.append(", ").append(logDelete);
        sb.append(", ").append(shardAuto);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ISysSchemaManager from) {
        setTableName(from.getTableName());
        setCreateDt(from.getCreateDt());
        setModifyDt(from.getModifyDt());
        setCommitId(from.getCommitId());
        setLogUpdate(from.getLogUpdate());
        setLogDelete(from.getLogDelete());
        setShardAuto(from.getShardAuto());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ISysSchemaManager> E into(E into) {
        into.from(this);
        return into;
    }
}
