/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.faceless.database.autogen.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.TableImpl;

import pro.fessional.wings.faceless.database.autogen.DefaultSchema;
import pro.fessional.wings.faceless.database.autogen.tables.records.SysStandardI18nRecord;
import pro.fessional.wings.faceless.database.jooq.WingsAliasTable;


/**
 * The table <code>wings.sys_standard_i18n</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4",
        "schema version:2019060101"
    },
    date = "2020-08-13T03:33:14.992Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysStandardI18nTable extends TableImpl<SysStandardI18nRecord> implements WingsAliasTable<SysStandardI18nTable> {

    private static final long serialVersionUID = -1001154191;

    /**
     * The reference instance of <code>sys_standard_i18n</code>
     */
    public static final SysStandardI18nTable SysStandardI18n = new SysStandardI18nTable();
    public static final SysStandardI18nTable asM5 = SysStandardI18n.as("m5");

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysStandardI18nRecord> getRecordType() {
        return SysStandardI18nRecord.class;
    }

    /**
     * The column <code>sys_standard_i18n.base</code>.
     */
    public final TableField<SysStandardI18nRecord, String> Base = createField(DSL.name("base"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "基集合:表或类");

    /**
     * The column <code>sys_standard_i18n.kind</code>.
     */
    public final TableField<SysStandardI18nRecord, String> Kind = createField(DSL.name("kind"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "多国语字段：code或列名");

    /**
     * The column <code>sys_standard_i18n.ukey</code>.
     */
    public final TableField<SysStandardI18nRecord, String> Ukey = createField(DSL.name("ukey"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "唯一键:code|id###");

    /**
     * The column <code>sys_standard_i18n.lang</code>.
     */
    public final TableField<SysStandardI18nRecord, String> Lang = createField(DSL.name("lang"), org.jooq.impl.SQLDataType.CHAR(5).nullable(false), this, "国家语言标记，下划线分隔:zh_CN");

    /**
     * The column <code>sys_standard_i18n.text</code>.
     */
    public final TableField<SysStandardI18nRecord, String> Text = createField(DSL.name("text"), org.jooq.impl.SQLDataType.VARCHAR(3000).nullable(false), this, "语言内容:中国/东北三省|攻城狮");

    /**
     * Create a <code>sys_standard_i18n</code> table reference
     */
    public SysStandardI18nTable() {
        this(DSL.name("sys_standard_i18n"), null);
    }

    /**
     * Create an aliased <code>sys_standard_i18n</code> table reference
     */
    public SysStandardI18nTable(String alias) {
        this(DSL.name(alias), SysStandardI18n);
    }

    /**
     * Create an aliased <code>sys_standard_i18n</code> table reference
     */
    public SysStandardI18nTable(Name alias) {
        this(alias, SysStandardI18n);
    }

    private SysStandardI18nTable(Name alias, Table<SysStandardI18nRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysStandardI18nTable(Name alias, Table<SysStandardI18nRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("106/标准多国语"));
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public UniqueKey<SysStandardI18nRecord> getPrimaryKey() {
        return Internal.createUniqueKey(pro.fessional.wings.faceless.database.autogen.tables.SysStandardI18nTable.SysStandardI18n, "KEY_sys_standard_i18n_PRIMARY", pro.fessional.wings.faceless.database.autogen.tables.SysStandardI18nTable.SysStandardI18n.Base, pro.fessional.wings.faceless.database.autogen.tables.SysStandardI18nTable.SysStandardI18n.Kind, pro.fessional.wings.faceless.database.autogen.tables.SysStandardI18nTable.SysStandardI18n.Ukey, pro.fessional.wings.faceless.database.autogen.tables.SysStandardI18nTable.SysStandardI18n.Lang);
    }

    @Override
    public List<UniqueKey<SysStandardI18nRecord>> getKeys() {
        return Arrays.<UniqueKey<SysStandardI18nRecord>>asList(
              Internal.createUniqueKey(pro.fessional.wings.faceless.database.autogen.tables.SysStandardI18nTable.SysStandardI18n, "KEY_sys_standard_i18n_PRIMARY", pro.fessional.wings.faceless.database.autogen.tables.SysStandardI18nTable.SysStandardI18n.Base, pro.fessional.wings.faceless.database.autogen.tables.SysStandardI18nTable.SysStandardI18n.Kind, pro.fessional.wings.faceless.database.autogen.tables.SysStandardI18nTable.SysStandardI18n.Ukey, pro.fessional.wings.faceless.database.autogen.tables.SysStandardI18nTable.SysStandardI18n.Lang)
        );
    }

    @Override
    public SysStandardI18nTable as(String alias) {
        return new SysStandardI18nTable(DSL.name(alias), this);
    }

    @Override
    public SysStandardI18nTable as(Name alias) {
        return new SysStandardI18nTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysStandardI18nTable rename(String name) {
        return new SysStandardI18nTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysStandardI18nTable rename(Name name) {
        return new SysStandardI18nTable(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * alias M5
     */
    @Override
    public SysStandardI18nTable getAliasTable() {
        return asM5;
    }
}
